<?xml version="1.0"?>
<doc>
    <assembly>
        <name>dss_sharp</name>
    </assembly>
    <members>
        <member name="T:dss_sharp.native.DSS_CAPI">
             <summary>
             The DSS_CAPI static class exposes DSS C-API functions to C#.
             DSS C-API is the library from DSS-Extensions that implements the 
             (customized, not supported by EPRI, etc.) OpenDSS engine and wraps
             it in easily consumable C-compatible functions.
            
             Some functions in this class are not exposed through the traditional
             API classes, but advanced users are free to use them.
             </summary>
        </member>
        <member name="F:dss_sharp.MonitorModes.dssVI">
            <summary>Monitor records Voltage and Current at the terminal (Default)</summary>
        </member>
        <member name="F:dss_sharp.MonitorModes.dssPower">
            <summary>Monitor records kW, kvar or kVA, angle values, etc. at the terminal to which it is connected.</summary>
        </member>
        <member name="F:dss_sharp.MonitorModes.dssTaps">
            <summary>For monitoring Regulator and Transformer taps</summary>
        </member>
        <member name="F:dss_sharp.MonitorModes.dssStates">
            <summary>For monitoring State Variables (for PC Elements only)</summary>
        </member>
        <member name="F:dss_sharp.MonitorModes.dssSequence">
            <summary>Reports the monitored quantities as sequence quantities</summary>
        </member>
        <member name="F:dss_sharp.MonitorModes.dssMagnitude">
            <summary>Reports the monitored quantities in Magnitude Only</summary>
        </member>
        <member name="F:dss_sharp.MonitorModes.dssPosOnly">
            <summary>Reports the Positive Seq only or avg of all phases</summary>
        </member>
        <member name="F:dss_sharp.SolveModes.dssSnapShot">
            <summary>Solve a single snapshot power flow</summary>
        </member>
        <member name="F:dss_sharp.SolveModes.dssDaily">
            <summary>Solve following Daily load shapes</summary>
        </member>
        <member name="F:dss_sharp.SolveModes.dssYearly">
            <summary>Solve following Yearly load shapes</summary>
        </member>
        <member name="F:dss_sharp.SolveModes.dssMonte1">
            <summary>Monte Carlo Mode 1</summary>
        </member>
        <member name="F:dss_sharp.SolveModes.dssLD1">
            <summary>Load-duration Mode 1</summary>
        </member>
        <member name="F:dss_sharp.SolveModes.dssPeakDay">
            <summary>Solves for Peak Day using Daily load curve</summary>
        </member>
        <member name="F:dss_sharp.SolveModes.dssDutyCycle">
            <summary>Solve following Duty Cycle load shapes</summary>
        </member>
        <member name="F:dss_sharp.SolveModes.dssDirect">
            <summary>Solve direct (forced admittance model)</summary>
        </member>
        <member name="F:dss_sharp.SolveModes.dssMonteFault">
            <summary>Monte carlo Fault Study</summary>
        </member>
        <member name="F:dss_sharp.SolveModes.dssFaultStudy">
            <summary>Fault study at all buses</summary>
        </member>
        <member name="F:dss_sharp.SolveModes.dssMonte2">
            <summary>Monte Carlo Mode 2</summary>
        </member>
        <member name="F:dss_sharp.SolveModes.dssMonte3">
            <summary>Monte Carlo Mode 3</summary>
        </member>
        <member name="F:dss_sharp.SolveModes.dssLD2">
            <summary>Load-Duration Mode 2</summary>
        </member>
        <member name="F:dss_sharp.SolveModes.dssAutoAdd">
            <summary>Auto add generators or capacitors</summary>
        </member>
        <member name="F:dss_sharp.SolveModes.dssDynamic">
            <summary>Solve for dynamics</summary>
        </member>
        <member name="F:dss_sharp.SolveModes.dssHarmonic">
            <summary>Harmonic solution mode</summary>
        </member>
        <member name="F:dss_sharp.CapControlModes.dssCapControlCurrent">
            <summary>Current control, ON and OFF settings on CT secondary</summary>
        </member>
        <member name="F:dss_sharp.CapControlModes.dssCapControlVoltage">
            <summary>Voltage control, ON and OFF settings on the PT secondary base</summary>
        </member>
        <member name="F:dss_sharp.CapControlModes.dssCapControlKVAR">
            <summary>kVAR control, ON and OFF settings on PT / CT base</summary>
        </member>
        <member name="F:dss_sharp.CapControlModes.dssCapControlTime">
            <summary>Time control, ON and OFF settings are seconds from midnight</summary>
        </member>
        <member name="F:dss_sharp.CapControlModes.dssCapControlPF">
            <summary>ON and OFF settings are power factor, negative for leading</summary>
        </member>
        <member name="F:dss_sharp.ActionCodes.dssActionNone">
            <summary>No action</summary>
        </member>
        <member name="F:dss_sharp.ActionCodes.dssActionOpen">
            <summary>Open a switch</summary>
        </member>
        <member name="F:dss_sharp.ActionCodes.dssActionClose">
            <summary>Close a switch</summary>
        </member>
        <member name="F:dss_sharp.ActionCodes.dssActionReset">
            <summary>Reset to the shelf state (unlocked, closed for a switch)</summary>
        </member>
        <member name="F:dss_sharp.ActionCodes.dssActionLock">
            <summary>Lock a switch, preventing both manual and automatic operation</summary>
        </member>
        <member name="F:dss_sharp.ActionCodes.dssActionUnlock">
            <summary>Unlock a switch, permitting both manual and automatic operation</summary>
        </member>
        <member name="F:dss_sharp.ActionCodes.dssActionTapUp">
            <summary>Move a regulator tap up</summary>
        </member>
        <member name="F:dss_sharp.ActionCodes.dssActionTapDown">
            <summary>Move a regulator tap down</summary>
        </member>
        <member name="F:dss_sharp.LineUnits.dssLineUnitsNone">
            <summary>No line length unit.</summary>
        </member>
        <member name="F:dss_sharp.LineUnits.dssLineUnitsMiles">
            <summary>Line length units in miles.</summary>
        </member>
        <member name="F:dss_sharp.LineUnits.dssLineUnitskFt">
            <summary>Line length units are in thousand feet.</summary>
        </member>
        <member name="F:dss_sharp.LineUnits.dssLineUnitskm">
            <summary>Line length units are km.</summary>
        </member>
        <member name="F:dss_sharp.LineUnits.dssLineUnitsmeter">
            <summary>Line length units are meters.</summary>
        </member>
        <member name="F:dss_sharp.LineUnits.dssLineUnitsft">
            <summary>Line units in feet.</summary>
        </member>
        <member name="F:dss_sharp.LineUnits.dssLineUnitsinch">
            <summary>Line length units are inches.</summary>
        </member>
        <member name="F:dss_sharp.LineUnits.dssLineUnitscm">
            <summary>Line units are cm.</summary>
        </member>
        <member name="F:dss_sharp.LineUnits.dssLineUnitsmm">
            <summary>Line length units are mm.</summary>
        </member>
        <member name="F:dss_sharp.LineUnits.dssLineUnitsMaxnum">
            <summary>Maximum number of line units constants.</summary>
        </member>
        <member name="F:dss_sharp.SolutionLoadModels.PowerFlow">
            <summary>Power Flow load model option</summary>
        </member>
        <member name="F:dss_sharp.SolutionLoadModels.Admittance">
            <summary>Admittance load model option</summary>
        </member>
        <member name="F:dss_sharp.SolutionAlgorithms.NormalSolve">
            <summary>Solution algorithm option - Normal solution mode</summary>
        </member>
        <member name="F:dss_sharp.SolutionAlgorithms.NewtonSolve">
            <summary>Solution algorithm option - Newton solution</summary>
        </member>
        <member name="F:dss_sharp.ControlModes.Static">
            <summary>Control Mode option - Static)</summary>
        </member>
        <member name="F:dss_sharp.ControlModes.Event">
            <summary>Control Mode Option - Event driven solution mode)</summary> 
        </member>
        <member name="F:dss_sharp.ControlModes.Time">
            <summary>Control mode option - Time driven mode)</summary> 
        </member>
        <member name="F:dss_sharp.ControlModes.Multirate">
            <summary>Control mode option - Multirate mode)</summary>
        </member>
        <member name="F:dss_sharp.ControlModes.ControlOff">
            <summary>Control Mode OFF)</summary>
        </member>
        <member name="F:dss_sharp.CktModels.Multiphase">
            <summary>Circuit model is multiphase (default)</summary>
        </member>
        <member name="F:dss_sharp.CktModels.PositiveSeq">
            <summary>Circuit model is positive sequence model only</summary>
        </member>
        <member name="F:dss_sharp.AutoAddTypes.AddGen">
            <summary>Add generators in AutoAdd mode</summary>
        </member>
        <member name="F:dss_sharp.AutoAddTypes.AddCap">
            <summary>Add capacitors in AutoAdd mode</summary>
        </member>
        <member name="F:dss_sharp.DSSJSONFlags.Full">
            <summary>Return all properties, regardless of order or if the property was filled by the user</summary>
        </member>
        <member name="F:dss_sharp.DSSJSONFlags.SkipRedundant">
            <summary>Skip redundant properties</summary>
        </member>
        <member name="F:dss_sharp.DSSJSONFlags.EnumAsInt">
            <summary>Return enums as integers instead of strings</summary>
        </member>
        <member name="F:dss_sharp.DSSJSONFlags.FullNames">
            <summary>Use full names for the elements, including the class name</summary>
        </member>
        <member name="F:dss_sharp.DSSJSONFlags.Pretty">
            <summary>Try to "pretty" format the JSON output</summary>
        </member>
        <member name="F:dss_sharp.DSSJSONFlags.ExcludeDisabled">
            <summary>Exclude disabled elements (only valid when exporting a collection)</summary>
        </member>
        <member name="F:dss_sharp.DSSJSONFlags.IncludeDSSClass">
            <summary>Add "DSSClass" property to the output objects</summary>
        </member>
        <member name="F:dss_sharp.DSSJSONFlags.LowercaseKeys">
            <summary>Use lowercase representation for the property names (and other keys) instead of the internal variants.</summary>
        </member>
        <member name="F:dss_sharp.DSSJSONFlags.IncludeDefaultObjs">
            <summary>
            Include default unchanged objects in the exports. 
            Any default object that has been edited is always exported. Affects whole circuit and batch exports.
            </summary>
        </member>
        <member name="F:dss_sharp.DSSJSONFlags.SkipTimestamp">
            <summary>Skip timestamp/version comment, which is added a pre-command by default. Affects whole circuit exports.</summary>
        </member>
        <member name="F:dss_sharp.DSSJSONFlags.SkipBuses">
            <summary>Skip exporting buses. Affects whole circuit exports.</summary>
        </member>
        <member name="F:dss_sharp.SolverOptions.ReuseNothing">
            <summary>Default mode, rebuilding everything</summary>
        </member>
        <member name="F:dss_sharp.SolverOptions.ReuseCompressedMatrix">
            <summary>Reuse only the prepared CSC matrix</summary>
        </member>
        <member name="F:dss_sharp.SolverOptions.ReuseSymbolicFactorization">
            <summary>Reuse the symbolic factorization, implies ReuseCompressedMatrix</summary>
        </member>
        <member name="F:dss_sharp.SolverOptions.ReuseNumericFactorization">
            <summary>Reuse the numeric factorization, implies ReuseSymbolicFactorization</summary>
        </member>
        <member name="F:dss_sharp.SolverOptions.AlwaysResetYPrimInvalid">
            <summary>Bit flag, see CktElement.pas</summary>
        </member>
        <member name="F:dss_sharp.DSSCompatFlags.NoSolverFloatChecks">
            <summary>
            If enabled, don't check for NaNs in the inner solution loop. 
            This can lead to various errors. 
            This flag is useful for legacy applications that don't handle OpenDSS API errors properly.
            Through the development of DSS-Extensions, we noticed this is actually a quite common issue.
            </summary>
        </member>
        <member name="F:dss_sharp.DSSCompatFlags.BadPrecision">
            <summary>
            If enabled, toggle worse precision for certain aspects of the engine. For
            example, the sequence-to-phase (`As2p`) and sequence-to-phase (`Ap2s`)
            transform matrices. On DSS C-API, we fill the matrix explicitly using
            higher precision, while numerical inversion of an initially worse precision
            matrix is used in the official OpenDSS. We will introduce better precision
            for other aspects of the engine in the future, so this flag can be used to
            toggle the old/bad values where feasible.
            </summary>
        </member>
        <member name="F:dss_sharp.DSSCompatFlags.InvControl9611">
            <summary>
            Toggle some InvControl behavior introduced in OpenDSS 9.6.1.1. It could be a regression
            but needs further investigation, so we added this flag in the time being.
            </summary>
        </member>
        <member name="F:dss_sharp.DSSCompatFlags.SaveCalcVoltageBases">
            <summary>
            When using "save circuit", the official OpenDSS always includes the "CalcVoltageBases" command in the
            saved script. We found that it is not always a good idea, so we removed the command (leaving it commented).
            Use this flag to enable the command in the saved script.
            </summary>
        </member>
        <member name="F:dss_sharp.DSSCompatFlags.ActiveLine">
            <summary>
            In the official OpenDSS implementation, the Lines API use the active circuit element instead of the
            active line. This can lead to unexpected behavior if the user is not aware of this detail.
            For example, if the user accidentally enables any other circuit element, the next time they use
            the Lines API, the line object that was previously enabled is overwritten with another unrelated
            object.
            This flag enables this behavior above if compatibility at this level is required. On DSS-Extensions,
            we changed the behavior to follow what most of the other APIs do: use the active object in the internal
            list. This change was done for DSS C-API v0.13.5, as well as the introduction of this flag.
            </summary>
        </member>
        <member name="F:dss_sharp.DSSCompatFlags.NoPropertyTracking">
            <summary>
            On DSS-Extensions/AltDSS, when setting a property invalidates a previous input value, the engine
            will try to mark the invalidated data as unset. This allows for better exports and tracking of
            the current state of DSS objects.
            Set this flag to disable this behavior, following the original OpenDSS implementation for potential
            compatibility with older software that may require the original behavior; note that may lead to
            erroneous interpretation of the data in the DSS properties. This was introduced in DSS C-API v0.14.0
            and will be further developed for future versions.
            </summary>
        </member>
        <member name="F:dss_sharp.DSSCompatFlags.SkipSideEffects">
            <summary>
            Some specific functions on the official OpenDSS APIs skip important side-effects.
            By default, on DSS-Extensions/AltDSS, those side-effects are enabled. Use this flag
            to try to follow the behavior of the official APIs. Beware that some side-effects are
            important and skipping them may result in incorrect results.
            This flag only affects some of the classic API functions, especially Loads and Generators.
            </summary>
        </member>
        <member name="T:dss_sharp.DSSPropertyNameStyle">
            <summary>
            This enum is used in the PropertyNameStyle property to control the naming convention.
            Currently, this only affects capitalization, i.e., if you software already uses case
            insensitive string comparisons for the property names, this is not useful. Otherwise,
            you can use `Legacy` to use the older names.
            </summary>
        </member>
        <member name="F:dss_sharp.DSSPropertyNameStyle.Modern">
            <summary>
            By default, the modern names are used. The names were reviewed to try to reach a convention across all components.
            </summary>
        </member>
        <member name="F:dss_sharp.DSSPropertyNameStyle.Lowercase">
            <summary>
            Use all lowercase strings.
            </summary>
        </member>
        <member name="F:dss_sharp.DSSPropertyNameStyle.Legacy">
            <summary>
            Use the previous capitalization of the property names.
            </summary>
        </member>
        <member name="T:dss_sharp.DSSSaveFlags">
            <summary>
            DSSSaveFlags are bit flags used in the Circuit_Save function to
            customize the saved circuit.
            </summary>
        </member>
        <member name="F:dss_sharp.DSSSaveFlags.CalcVoltageBases">
            <summary>Include the command CalcVoltageBases.</summary>
        </member>
        <member name="F:dss_sharp.DSSSaveFlags.SetVoltageBases">
            <summary>Include commands to set the voltage bases individually.</summary>
        </member>
        <member name="F:dss_sharp.DSSSaveFlags.IncludeOptions">
            <summary>Include most of the options (from the Set/Get DSS commands).</summary>
        </member>
        <member name="F:dss_sharp.DSSSaveFlags.IncludeDisabled">
            <summary>Include disabled circuit elements (and LoadShapes).</summary>
        </member>
        <member name="F:dss_sharp.DSSSaveFlags.ExcludeDefault">
            <summary>Exclude default DSS items if they are not modified by the user.</summary>
        </member>
        <member name="F:dss_sharp.DSSSaveFlags.SingleFile">
            <summary>Use a single file instead of a folder for output.</summary>
        </member>
        <member name="F:dss_sharp.DSSSaveFlags.KeepOrder">
            <summary>Save the circuit elements in the order they were loaded in the active circuit. Guarantees better reproducibility, especially when the system is ill-conditioned. Requires "SingleFile" flag.</summary>
        </member>
        <member name="F:dss_sharp.DSSSaveFlags.ExcludeMeterZones">
            <summary>Do not export meter zones (as "feeders") separately. Has no effect when using a single file.</summary>
        </member>
        <member name="F:dss_sharp.DSSSaveFlags.IsOpen">
            <summary>Export commands to open terminals of elements.</summary>
        </member>
        <member name="F:dss_sharp.DSSSaveFlags.ToString">
            <summary>Export to the result string. Requires "SingleFile" flag.</summary>
        </member>
        <member name="P:dss_sharp.Bus.AllPCEatBus">
            <summary>
            Returns an array with the names of all PCE connected to the active bus
            </summary>
        </member>
        <member name="P:dss_sharp.Bus.AllPDEatBus">
            <summary>
            Returns an array with the names of all PDE connected to the active bus
            </summary>
        </member>
        <member name="M:dss_sharp.Bus.GetUniqueNodeNumber(System.Int32)">
            <summary>
            Return a unique node number at the active bus to avoid node collisions and adds 
            it to the node list for the bus.
            
            Original COM help: https://opendss.epri.com/GetUniqueNodeNumber.html
            </summary>
        </member>
        <member name="M:dss_sharp.Bus.ZscRefresh">
            <summary>
            Refreshes the Zsc matrix for the active bus.
            
            Original COM help: https://opendss.epri.com/ZscRefresh.html
            </summary>
        </member>
        <member name="P:dss_sharp.Bus.Coorddefined">
            <summary>
            Indicates whether a coordinate has been defined for this bus
            
            Original COM help: https://opendss.epri.com/Coorddefined.html
            </summary>
        </member>
        <member name="P:dss_sharp.Bus.CplxSeqVoltages">
            <summary>
            Complex Double array of Sequence Voltages (0, 1, 2) at this Bus.
            
            Original COM help: https://opendss.epri.com/CplxSeqVoltages.html
            </summary>
        </member>
        <member name="P:dss_sharp.Bus.Cust_Duration">
            <summary>
            Accumulated customer outage durations
            
            Original COM help: https://opendss.epri.com/Cust_Duration.html
            </summary>
        </member>
        <member name="P:dss_sharp.Bus.Cust_Interrupts">
            <summary>
            Annual number of customer-interruptions from this bus
            
            Original COM help: https://opendss.epri.com/Cust_Interrupts.html
            </summary>
        </member>
        <member name="P:dss_sharp.Bus.Distance">
            <summary>
            Distance from energymeter (if non-zero)
            
            Original COM help: https://opendss.epri.com/Distance.html
            </summary>
        </member>
        <member name="P:dss_sharp.Bus.Int_Duration">
            <summary>
            Average interruption duration, hr.
            
            Original COM help: https://opendss.epri.com/Int_Duration.html
            </summary>
        </member>
        <member name="P:dss_sharp.Bus.Isc">
            <summary>
            Short circuit currents at bus; Complex Array.
            
            Original COM help: https://opendss.epri.com/Isc.html
            </summary>
        </member>
        <member name="P:dss_sharp.Bus.Lambda">
            <summary>
            Accumulated failure rate downstream from this bus; faults per year
            
            Original COM help: https://opendss.epri.com/Lambda.html
            </summary>
        </member>
        <member name="P:dss_sharp.Bus.N_Customers">
            <summary>
            Total numbers of customers served downline from this bus
            
            Original COM help: https://opendss.epri.com/N_Customers.html
            </summary>
        </member>
        <member name="P:dss_sharp.Bus.N_interrupts">
            <summary>
            Number of interruptions this bus per year
            
            Original COM help: https://opendss.epri.com/N_interrupts.html
            </summary>
        </member>
        <member name="P:dss_sharp.Bus.Name">
            <summary>
            Name of Bus
            
            Original COM help: https://opendss.epri.com/Name1.html
            </summary>
        </member>
        <member name="P:dss_sharp.Bus.Nodes">
            <summary>
            Integer Array of Node Numbers defined at the bus in same order as the voltages.
            
            Original COM help: https://opendss.epri.com/Nodes.html
            </summary>
        </member>
        <member name="P:dss_sharp.Bus.NumNodes">
            <summary>
            Number of Nodes this bus.
            
            Original COM help: https://opendss.epri.com/NumNodes.html
            </summary>
        </member>
        <member name="P:dss_sharp.Bus.SectionID">
            <summary>
            Integer ID of the feeder section in which this bus is located.
            
            Original COM help: https://opendss.epri.com/SectionID.html
            </summary>
        </member>
        <member name="P:dss_sharp.Bus.SeqVoltages">
            <summary>
            Double Array of sequence voltages at this bus. Magnitudes only.
            
            Original COM help: https://opendss.epri.com/SeqVoltages.html
            </summary>
        </member>
        <member name="P:dss_sharp.Bus.TotalMiles">
            <summary>
            Total length of line downline from this bus, in miles. For recloser siting algorithm.
            
            Original COM help: https://opendss.epri.com/TotalMiles.html
            </summary>
        </member>
        <member name="P:dss_sharp.Bus.VLL">
            <summary>
            For 2- and 3-phase buses, returns array of complex numbers representing L-L voltages in volts. Returns -1.0 for 1-phase bus. If more than 3 phases, returns only first 3.
            
            Original COM help: https://opendss.epri.com/VLL.html
            </summary>
        </member>
        <member name="P:dss_sharp.Bus.VMagAngle">
            <summary>
            Array of doubles containing voltages in Magnitude (VLN), angle (degrees) 
            
            Original COM help: https://opendss.epri.com/VMagAngle.html
            </summary>
        </member>
        <member name="P:dss_sharp.Bus.Voc">
            <summary>
            Open circuit voltage; Complex array.
            
            Original COM help: https://opendss.epri.com/Voc.html
            </summary>
        </member>
        <member name="P:dss_sharp.Bus.Voltages">
            <summary>
            Complex array of voltages at this bus.
            
            Original COM help: https://opendss.epri.com/Voltages.html
            </summary>
        </member>
        <member name="P:dss_sharp.Bus.YscMatrix">
            <summary>
            Complex array of Ysc matrix at bus. Column by column.
            
            Original COM help: https://opendss.epri.com/YscMatrix.html
            </summary>
        </member>
        <member name="P:dss_sharp.Bus.Zsc0">
            <summary>
            Complex Zero-Sequence short circuit impedance at bus.
            
            Original COM help: https://opendss.epri.com/Zsc0.html
            </summary>
        </member>
        <member name="P:dss_sharp.Bus.Zsc1">
            <summary>
            Complex Positive-Sequence short circuit impedance at bus.
            
            Original COM help: https://opendss.epri.com/Zsc1.html
            </summary>
        </member>
        <member name="P:dss_sharp.Bus.ZscMatrix">
            <summary>
            Complex array of Zsc matrix at bus. Column by column.
            
            Original COM help: https://opendss.epri.com/ZscMatrix.html
            </summary>
        </member>
        <member name="P:dss_sharp.Bus.kVBase">
            <summary>
            Base voltage at bus in kV
            
            Original COM help: https://opendss.epri.com/kVBase.html
            </summary>
        </member>
        <member name="P:dss_sharp.Bus.puVLL">
            <summary>
            Returns Complex array of pu L-L voltages for 2- and 3-phase buses. Returns -1.0 for 1-phase bus. If more than 3 phases, returns only 3 phases.
            
            Original COM help: https://opendss.epri.com/puVLL.html
            </summary>
        </member>
        <member name="P:dss_sharp.Bus.puVmagAngle">
            <summary>
            Array of doubles containing voltage magnitude, angle (degrees) pairs in per unit
            
            Original COM help: https://opendss.epri.com/puVmagAngle.html
            </summary>
        </member>
        <member name="P:dss_sharp.Bus.puVoltages">
            <summary>
            Complex Array of pu voltages at the bus.
            
            Original COM help: https://opendss.epri.com/puVoltages.html
            </summary>
        </member>
        <member name="P:dss_sharp.Bus.ZSC012Matrix">
            <summary>
            Array of doubles (complex) containing the complete 012 Zsc matrix. 
            Only available after Zsc is computed, either through the "ZscRefresh" command, or running a "FaultStudy" solution.
            Only available for buses with 3 nodes.
            
            Original COM help: https://opendss.epri.com/ZSC012Matrix.html
            </summary>
        </member>
        <member name="P:dss_sharp.Bus.x">
            <summary>
            X Coordinate for bus
            
            Original COM help: https://opendss.epri.com/x.html
            </summary>
        </member>
        <member name="P:dss_sharp.Bus.y">
            <summary>
            Y coordinate for bus
            
            Original COM help: https://opendss.epri.com/y.html
            </summary>
        </member>
        <member name="P:dss_sharp.Bus.LoadList">
            <summary>
            List of strings: Full Names of LOAD elements connected to the active bus.
            
            Original COM help: https://opendss.epri.com/LoadList.html
            </summary>
        </member>
        <member name="P:dss_sharp.Bus.LineList">
            <summary>
            List of strings: Full Names of LINE elements connected to the active bus.
            
            Original COM help: https://opendss.epri.com/LineList.html
            </summary>
        </member>
        <member name="P:dss_sharp.CNData.AllNames">
            <summary>
            Array of strings with all CNData names in the circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.CNData.Count">
            <summary>
            Number of CNData objects in active circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.CNData.First">
            <summary>
            Sets the first CNData active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.CNData.Name">
            <summary>
            Sets the active CNData by Name.
            </summary>
        </member>
        <member name="P:dss_sharp.CNData.Next">
            <summary>
            Sets the next CNData active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.CNData.idx">
            <summary>
            Get/set active CNData by index; index is 1-based: 1..count
            </summary>
        </member>
        <member name="P:dss_sharp.CNData.EmergAmps">
            <summary>
            Emergency ampere rating
            </summary>
        </member>
        <member name="P:dss_sharp.CNData.NormAmps">
            <summary>
            Normal Ampere rating
            </summary>
        </member>
        <member name="P:dss_sharp.Capacitors.AllNames">
            <summary>
            Array of strings with all Capacitor names in the circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.Capacitors.Count">
            <summary>
            Number of Capacitor objects in active circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.Capacitors.First">
            <summary>
            Sets the first Capacitor active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.Capacitors.Name">
            <summary>
            Sets the active Capacitor by Name.
            </summary>
        </member>
        <member name="P:dss_sharp.Capacitors.Next">
            <summary>
            Sets the next Capacitor active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.Capacitors.idx">
            <summary>
            Get/set active Capacitor by index; index is 1-based: 1..count
            </summary>
        </member>
        <member name="P:dss_sharp.Capacitors.AvailableSteps">
            <summary>
            Number of Steps available in cap bank to be switched ON.
            
            Original COM help: https://opendss.epri.com/AvailableSteps.html
            </summary>
        </member>
        <member name="P:dss_sharp.Capacitors.IsDelta">
            <summary>
            Delta connection or wye?
            
            Original COM help: https://opendss.epri.com/IsDelta.html
            </summary>
        </member>
        <member name="P:dss_sharp.Capacitors.NumSteps">
            <summary>
            Number of steps (default 1) for distributing and switching the total bank kVAR.
            
            Original COM help: https://opendss.epri.com/NumSteps.html
            </summary>
        </member>
        <member name="P:dss_sharp.Capacitors.States">
            <summary>
            An array of integers [0..NumSteps-1] indicating state of each step. If the read value is -1 an error has occurred.
            
            Original COM help: https://opendss.epri.com/States.html
            </summary>
        </member>
        <member name="P:dss_sharp.Capacitors.kV">
            <summary>
            Bank kV rating. Use LL for 2 or 3 phases, or actual can rating for 1 phase.
            
            Original COM help: https://opendss.epri.com/kV.html
            </summary>
        </member>
        <member name="P:dss_sharp.Capacitors.kvar">
            <summary>
            Total bank KVAR, distributed equally among phases and steps.
            </summary>
        </member>
        <member name="M:dss_sharp.CktElement.Variable(System.String,System.Int32@)">
            <summary>
            Value as return and error code in Code parameter. For PCElement, get the value of a variable by name. If Code>0 then no variable by this name or not a PCelement.
            </summary>
        </member>
        <member name="M:dss_sharp.CktElement.Variablei(System.Int32,System.Int32@)">
            <summary>
            Value as return and error code in Code parameter. For PCElement, get the value of a variable by integer index. If Code>0 then no variable by this index or not a PCelement.
            </summary>
        </member>
        <member name="M:dss_sharp.CktElement.VariableByIndex(System.Int32,System.Int32@)">
            <summary>
            Value as return and error code in Code parameter. For PCElement, get the value of a variable by integer index. If Code>0 then no variable by this index or not a PCelement.
            </summary>
        </member>
        <member name="M:dss_sharp.CktElement.VariableByName(System.String,System.Int32@)">
            <summary>
            Value as return and error code in Code parameter. For PCElement, get the value of a variable by name. If Code>0 then no variable by this name or not a PCelement.
            </summary>
        </member>
        <member name="M:dss_sharp.CktElement.VariableByIndex(System.Int32,System.Int32@,System.Double)">
            <summary>
            Set the Value of a variable by indx if a PCElement. If Code>0 then no variable by this index or not a PCelement.
            </summary>
        </member>
        <member name="M:dss_sharp.CktElement.VariableByName(System.String,System.Int32@,System.Double)">
            <summary>
            Set the Value of a variable by name if a PCElement. If Code>0 then no variable by this name or not a PCelement.
            </summary>
        </member>
        <member name="M:dss_sharp.CktElement.Close(System.Int32,System.Int32)">
            <summary>
            Close the specified terminal and phase, if non-zero, or all conductors at the terminal.
            
            Original COM help: https://opendss.epri.com/Close1.html
            </summary>
        </member>
        <member name="M:dss_sharp.CktElement.Controller(System.Int32)">
            <summary>
            Full name of the i-th controller attached to this element. Ex: str = Controller(2).  See NumControls to determine valid index range
            </summary>
        </member>
        <member name="M:dss_sharp.CktElement.Open(System.Int32,System.Int32)">
            <summary>
            Open the specified terminal and phase, if non-zero, or all conductors at the terminal.
            
            Original COM help: https://opendss.epri.com/Open1.html
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.AllPropertyNames">
            <summary>
            Array containing all property names of the active device.
            
            Original COM help: https://opendss.epri.com/AllPropertyNames.html
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.AllVariableNames">
            <summary>
            Array of strings listing all the published state variable names.
            Valid only for PCElements.
            
            Original COM help: https://opendss.epri.com/AllVariableNames.html
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.AllVariableValues">
            <summary>
            Array of doubles. Values of state variables of active element if PC element.
            Valid only for PCElements.
            
            Original COM help: https://opendss.epri.com/AllVariableValues.html
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.BusNames">
            <summary>
            Bus definitions to which each terminal is connected.
            
            Original COM help: https://opendss.epri.com/BusNames.html
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.CplxSeqCurrents">
            <summary>
            Complex double array of Sequence Currents for all conductors of all terminals of active circuit element.
            
            Original COM help: https://opendss.epri.com/CplxSeqCurrents.html
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.CplxSeqVoltages">
            <summary>
            Complex double array of Sequence Voltage for all terminals of active circuit element.
            
            Original COM help: https://opendss.epri.com/CplxSeqVoltages1.html
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.Currents">
            <summary>
            Complex array of currents into each conductor of each terminal
            
            Original COM help: https://opendss.epri.com/Currents1.html
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.CurrentsMagAng">
            <summary>
            Currents in magnitude, angle (degrees) format as a array of doubles.
            
            Original COM help: https://opendss.epri.com/CurrentsMagAng.html
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.DisplayName">
            <summary>
            Display name of the object (not necessarily unique)
            
            Original COM help: https://opendss.epri.com/DisplayName.html
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.EmergAmps">
            <summary>
            Emergency Ampere Rating for PD elements
            
            Original COM help: https://opendss.epri.com/EmergAmps.html
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.Enabled">
            <summary>
            Boolean indicating that element is currently in the circuit.
            
            Original COM help: https://opendss.epri.com/Enabled.html
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.EnergyMeter">
            <summary>
            Name of the Energy Meter this element is assigned to.
            
            Original COM help: https://opendss.epri.com/EnergyMeter.html
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.GUID">
            <summary>
            globally unique identifier for this object
            
            Original COM help: https://opendss.epri.com/GUID.html
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.Handle">
            <summary>
            Pointer to this object
            
            Original COM help: https://opendss.epri.com/Handle.html
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.HasOCPDevice">
            <summary>
            True if a recloser, relay, or fuse controlling this ckt element. OCP = Overcurrent Protection 
            
            Original COM help: https://opendss.epri.com/HasOCPDevice.html
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.HasSwitchControl">
            <summary>
            This element has a SwtControl attached.
            
            Original COM help: https://opendss.epri.com/HasSwitchControl.html
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.HasVoltControl">
            <summary>
            This element has a CapControl or RegControl attached.
            
            Original COM help: https://opendss.epri.com/HasVoltControl.html
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.Losses">
            <summary>
            Total losses in the element: two-element double array (complex), in VA (watts, vars)
            
            Original COM help: https://opendss.epri.com/Losses1.html
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.Name">
            <summary>
            Full Name of Active Circuit Element
            
            Original COM help: https://opendss.epri.com/Name4.html
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.NodeOrder">
            <summary>
            Array of integer containing the node numbers (representing phases, for example) for each conductor of each terminal. 
            
            Original COM help: https://opendss.epri.com/NodeOrder.html
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.NormalAmps">
            <summary>
            Normal ampere rating for PD Elements
            
            Original COM help: https://opendss.epri.com/NormalAmps.html
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.NumConductors">
            <summary>
            Number of Conductors per Terminal
            
            Original COM help: https://opendss.epri.com/NumConductors.html
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.NumControls">
            <summary>
            Number of controls connected to this device. 
            Use to determine valid range for index into Controller array.
            
            Original COM help: https://opendss.epri.com/NumControls.html
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.NumPhases">
            <summary>
            Number of Phases
            
            Original COM help: https://opendss.epri.com/NumPhases.html
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.NumProperties">
            <summary>
            Number of Properties this Circuit Element.
            
            Original COM help: https://opendss.epri.com/NumProperties.html
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.NumTerminals">
            <summary>
            Number of Terminals this Circuit Element
            
            Original COM help: https://opendss.epri.com/NumTerminals.html
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.OCPDevIndex">
            <summary>
            Index into Controller list of OCP Device controlling this CktElement
            
            Original COM help: https://opendss.epri.com/OCPDevIndex.html
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.OCPDevType">
            <summary>
            0=None; 1=Fuse; 2=Recloser; 3=Relay;  Type of OCP controller device
            
            Original COM help: https://opendss.epri.com/OCPDevType.html
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.PhaseLosses">
            <summary>
            Complex array of losses (kVA) by phase
            
            Original COM help: https://opendss.epri.com/PhaseLosses.html
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.Powers">
            <summary>
            Complex array of powers (kVA) into each conductor of each terminal
            
            Original COM help: https://opendss.epri.com/Powers.html
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.Residuals">
            <summary>
            Residual currents for each terminal: (magnitude, angle in degrees)
            
            Original COM help: https://opendss.epri.com/Residuals.html
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.SeqCurrents">
            <summary>
            Double array of symmetrical component currents (magnitudes only) into each 3-phase terminal
            
            Original COM help: https://opendss.epri.com/SeqCurrents.html
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.SeqPowers">
            <summary>
            Complex array of sequence powers (kW, kvar) into each 3-phase terminal
            
            Original COM help: https://opendss.epri.com/SeqPowers.html
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.SeqVoltages">
            <summary>
            Double array of symmetrical component voltages (magnitudes only) at each 3-phase terminal
            
            Original COM help: https://opendss.epri.com/SeqVoltages1.html
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.Voltages">
            <summary>
            Complex array of voltages at terminals
            
            Original COM help: https://opendss.epri.com/Voltages1.html
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.VoltagesMagAng">
            <summary>
            Voltages at each conductor in magnitude, angle form as array of doubles.
            
            Original COM help: https://opendss.epri.com/VoltagesMagAng.html
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.Yprim">
            <summary>
            YPrim matrix, column order, complex numbers
            
            Original COM help: https://opendss.epri.com/Yprim.html
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.IsIsolated">
            <summary>
            Returns true if the current active element is isolated.
            Note that this only fetches the current value. See also the Topology interface.
            
            **(API Extension)**
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.TotalPowers">
            <summary>
            Returns an array with the total powers (complex, kVA) at ALL terminals of the active circuit element.
            
            Original COM help: https://opendss.epri.com/TotalPowers.html
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.NodeRef">
            <summary>
            Array of integers, a copy of the internal NodeRef of the CktElement.
            
            **(API Extension)**
            </summary>
        </member>
        <member name="P:dss_sharp.Generators.AllNames">
            <summary>
            Array of strings with all Generator names in the circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.Generators.Count">
            <summary>
            Number of Generator objects in active circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.Generators.First">
            <summary>
            Sets the first Generator active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.Generators.Name">
            <summary>
            Sets the active Generator by Name.
            </summary>
        </member>
        <member name="P:dss_sharp.Generators.Next">
            <summary>
            Sets the next Generator active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.Generators.idx">
            <summary>
            Get/set active Generator by index; index is 1-based: 1..count
            </summary>
        </member>
        <member name="P:dss_sharp.Generators.ForcedON">
            <summary>
            Indicates whether the generator is forced ON regardless of other dispatch criteria.
            
            Original COM help: https://opendss.epri.com/ForcedON.html
            </summary>
        </member>
        <member name="P:dss_sharp.Generators.Model">
            <summary>
            Generator Model
            
            Original COM help: https://opendss.epri.com/Model.html
            </summary>
        </member>
        <member name="P:dss_sharp.Generators.PF">
            <summary>
            Power factor (pos. = producing vars). Updates kvar based on present kW value.
            
            Original COM help: https://opendss.epri.com/PF.html
            </summary>
        </member>
        <member name="P:dss_sharp.Generators.Phases">
            <summary>
            Number of phases
            
            Original COM help: https://opendss.epri.com/Phases.html
            </summary>
        </member>
        <member name="P:dss_sharp.Generators.RegisterNames">
            <summary>
            Array of Names of all generator energy meter registers
            
            See also the enum `GeneratorRegisters`.
            </summary>
        </member>
        <member name="P:dss_sharp.Generators.RegisterValues">
            <summary>
            Array of values in generator energy meter registers.
            
            Original COM help: https://opendss.epri.com/RegisterValues.html
            </summary>
        </member>
        <member name="P:dss_sharp.Generators.Vmaxpu">
            <summary>
            Vmaxpu for generator model
            
            Original COM help: https://opendss.epri.com/Vmaxpu.html
            </summary>
        </member>
        <member name="P:dss_sharp.Generators.Vminpu">
            <summary>
            Vminpu for Generator model
            
            Original COM help: https://opendss.epri.com/Vminpu.html
            </summary>
        </member>
        <member name="P:dss_sharp.Generators.kV">
            <summary>
            Voltage base for the active generator, kV
            
            Original COM help: https://opendss.epri.com/kV1.html
            </summary>
        </member>
        <member name="P:dss_sharp.Generators.kVArated">
            <summary>
            kVA rating of the generator
            
            Original COM help: https://opendss.epri.com/kVArated.html
            </summary>
        </member>
        <member name="P:dss_sharp.Generators.kW">
            <summary>
            kW output for the active generator. kvar is updated for current power factor.
            
            Original COM help: https://opendss.epri.com/kW.html
            </summary>
        </member>
        <member name="P:dss_sharp.Generators.kvar">
            <summary>
            kvar output for the active generator. Updates power factor based on present kW value.
            
            Original COM help: https://opendss.epri.com/kvar.html
            </summary>
        </member>
        <member name="P:dss_sharp.Generators.daily">
            <summary>
            Name of the loadshape for a daily generation profile.
            
            **(API Extension)**
            </summary>
        </member>
        <member name="P:dss_sharp.Generators.duty">
            <summary>
            Name of the loadshape for a duty cycle simulation.
            
            **(API Extension)**
            </summary>
        </member>
        <member name="P:dss_sharp.Generators.Yearly">
            <summary>
            Name of yearly loadshape
            
            **(API Extension)**
            </summary>
        </member>
        <member name="P:dss_sharp.Generators.Status">
            <summary>
            Response to dispatch multipliers: Fixed=1 (dispatch multipliers do not apply), Variable=0 (follows curves).
            
            Related enumeration: GeneratorStatus
            
            **(API Extension)**
            </summary>
        </member>
        <member name="P:dss_sharp.Generators.IsDelta">
            <summary>
            Generator connection. True/1 if delta connection, False/0 if wye.
            
            **(API Extension)**
            </summary>
        </member>
        <member name="P:dss_sharp.Generators.kva">
            <summary>
            kVA rating of electrical machine. Applied to machine or inverter definition for Dynamics mode solutions.
            
            **(API Extension)**
            </summary>
        </member>
        <member name="P:dss_sharp.Generators.Class">
            <summary>
            An arbitrary integer number representing the class of Generator so that Generator values may be segregated by class.
            
            **(API Extension)**
            </summary>
        </member>
        <member name="P:dss_sharp.Generators.Bus1">
            <summary>
            Bus to which the Generator is connected. May include specific node specification.
            
            **(API Extension)**
            </summary>
        </member>
        <member name="P:dss_sharp.Lines.AllNames">
            <summary>
            Array of strings with all Line names in the circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.Lines.Count">
            <summary>
            Number of Line objects in active circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.Lines.First">
            <summary>
            Sets the first Line active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.Lines.Name">
            <summary>
            Sets the active Line by Name.
            </summary>
        </member>
        <member name="P:dss_sharp.Lines.Next">
            <summary>
            Sets the next Line active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.Lines.idx">
            <summary>
            Get/set active Line by index; index is 1-based: 1..count
            </summary>
        </member>
        <member name="P:dss_sharp.Lines.Bus1">
            <summary>
            Name of bus for terminal 1.
            
            Original COM help: https://opendss.epri.com/Bus1.html
            </summary>
        </member>
        <member name="P:dss_sharp.Lines.Bus2">
            <summary>
            Name of bus for terminal 2.
            
            Original COM help: https://opendss.epri.com/Bus2.html
            </summary>
        </member>
        <member name="P:dss_sharp.Lines.C0">
            <summary>
            Zero Sequence capacitance, nanofarads per unit length.
            
            Original COM help: https://opendss.epri.com/C0.html
            </summary>
        </member>
        <member name="P:dss_sharp.Lines.C1">
            <summary>
            Positive Sequence capacitance, nanofarads per unit length.
            
            Original COM help: https://opendss.epri.com/C1.html
            </summary>
        </member>
        <member name="P:dss_sharp.Lines.EmergAmps">
            <summary>
            Emergency (maximum) ampere rating of Line.
            
            Original COM help: https://opendss.epri.com/EmergAmps1.html
            </summary>
        </member>
        <member name="P:dss_sharp.Lines.Geometry">
            <summary>
            Line geometry code
            
            Original COM help: https://opendss.epri.com/Geometry.html
            </summary>
        </member>
        <member name="P:dss_sharp.Lines.Length">
            <summary>
            Length of line section in units compatible with the LineCode definition.
            
            Original COM help: https://opendss.epri.com/Length.html
            </summary>
        </member>
        <member name="P:dss_sharp.Lines.LineCode">
            <summary>
            Name of LineCode object that defines the impedances.
            
            Original COM help: https://opendss.epri.com/LineCode.html
            </summary>
        </member>
        <member name="P:dss_sharp.Lines.NormAmps">
            <summary>
            Normal ampere rating of Line.
            
            Original COM help: https://opendss.epri.com/NormAmps.html
            </summary>
        </member>
        <member name="P:dss_sharp.Lines.NumCust">
            <summary>
            Number of customers on this line section.
            
            Original COM help: https://opendss.epri.com/NumCust.html
            </summary>
        </member>
        <member name="P:dss_sharp.Lines.Parent">
            <summary>
            Sets Parent of the active Line to be the active line. Returns 0 if no parent or action fails.
            
            Original COM help: https://opendss.epri.com/Parent.html
            </summary>
        </member>
        <member name="P:dss_sharp.Lines.Phases">
            <summary>
            Number of Phases, this Line element.
            
            Original COM help: https://opendss.epri.com/Phases1.html
            </summary>
        </member>
        <member name="P:dss_sharp.Lines.R0">
            <summary>
            Zero Sequence resistance, ohms per unit length.
            
            Original COM help: https://opendss.epri.com/R0.html
            </summary>
        </member>
        <member name="P:dss_sharp.Lines.R1">
            <summary>
            Positive Sequence resistance, ohms per unit length.
            
            Original COM help: https://opendss.epri.com/R1.html
            </summary>
        </member>
        <member name="P:dss_sharp.Lines.Rg">
            <summary>
            Earth return resistance value used to compute line impedances at power frequency
            
            Original COM help: https://opendss.epri.com/Rg.html
            </summary>
        </member>
        <member name="P:dss_sharp.Lines.Rho">
            <summary>
            Earth Resistivity, m-ohms
            
            Original COM help: https://opendss.epri.com/Rho.html
            </summary>
        </member>
        <member name="P:dss_sharp.Lines.Rmatrix">
            <summary>
            Resistance matrix (full), ohms per unit length. Array of doubles.
            
            Original COM help: https://opendss.epri.com/Rmatrix.html
            </summary>
        </member>
        <member name="P:dss_sharp.Lines.Spacing">
            <summary>
            Line spacing code
            
            Original COM help: https://opendss.epri.com/Spacing.html
            </summary>
        </member>
        <member name="P:dss_sharp.Lines.TotalCust">
            <summary>
            Total Number of customers served from this line section.
            
            Original COM help: https://opendss.epri.com/TotalCust.html
            </summary>
        </member>
        <member name="P:dss_sharp.Lines.X0">
            <summary>
            Zero Sequence reactance ohms per unit length.
            
            Original COM help: https://opendss.epri.com/X0.html
            </summary>
        </member>
        <member name="P:dss_sharp.Lines.X1">
            <summary>
            Positive Sequence reactance, ohms per unit length.
            
            Original COM help: https://opendss.epri.com/X1.html
            </summary>
        </member>
        <member name="P:dss_sharp.Lines.Xg">
            <summary>
            Earth return reactance value used to compute line impedances at power frequency
            
            Original COM help: https://opendss.epri.com/Xg.html
            </summary>
        </member>
        <member name="P:dss_sharp.Lines.Xmatrix">
            <summary>
            Reactance matrix (full), ohms per unit length. Array of doubles.
            
            Original COM help: https://opendss.epri.com/Xmatrix.html
            </summary>
        </member>
        <member name="P:dss_sharp.Lines.Yprim">
            <summary>
            Yprimitive for the active line object (complex array).
            
            Original COM help: https://opendss.epri.com/Yprim1.html
            </summary>
        </member>
        <member name="P:dss_sharp.Lines.SeasonRating">
            <summary>
            Delivers the rating for the current season (in Amps)  if the "SeasonalRatings" option is active
            
            Original COM help: https://opendss.epri.com/SeasonRating.html
            </summary>
        </member>
        <member name="P:dss_sharp.Lines.IsSwitch">
            <summary>
            Sets/gets the Line element switch status. Setting it has side-effects to the line parameters.
            
            **(API Extension)**
            </summary>
        </member>
        <member name="P:dss_sharp.Settings.AllowDuplicates">
            <summary>
            {True | False*} Designates whether to allow duplicate names of objects
            
            **NOTE**: for DSS-Extensions, we are considering removing this option in a future 
            release since it has performance impacts even when not used.
            </summary>
        </member>
        <member name="P:dss_sharp.Settings.AutoBusList">
            <summary>
            List of Buses or (File=xxxx) syntax for the AutoAdd solution mode.
            
            Original COM help: https://opendss.epri.com/AutoBusList.html
            </summary>
        </member>
        <member name="P:dss_sharp.Settings.CktModel">
            <summary>
            Indicate if the circuit model is positive sequence.
            
            Original COM help: https://opendss.epri.com/CktModel.html
            </summary>
        </member>
        <member name="P:dss_sharp.Settings.ControlTrace">
            <summary>
            Denotes whether to trace the control actions to a file.
            
            Original COM help: https://opendss.epri.com/ControlTrace.html
            </summary>
        </member>
        <member name="P:dss_sharp.Settings.EmergVmaxpu">
            <summary>
            Per Unit maximum voltage for Emergency conditions.
            
            Original COM help: https://opendss.epri.com/EmergVmaxpu.html
            </summary>
        </member>
        <member name="P:dss_sharp.Settings.EmergVminpu">
            <summary>
            Per Unit minimum voltage for Emergency conditions.
            
            Original COM help: https://opendss.epri.com/EmergVminpu.html
            </summary>
        </member>
        <member name="P:dss_sharp.Settings.LossRegs">
            <summary>
            Integer array defining which energy meter registers to use for computing losses
            
            Original COM help: https://opendss.epri.com/LossRegs.html
            </summary>
        </member>
        <member name="P:dss_sharp.Settings.LossWeight">
            <summary>
            Weighting factor applied to Loss register values.
            
            Original COM help: https://opendss.epri.com/LossWeight.html
            </summary>
        </member>
        <member name="P:dss_sharp.Settings.NormVmaxpu">
            <summary>
            Per Unit maximum voltage for Normal conditions.
            
            Original COM help: https://opendss.epri.com/NormVmaxpu.html
            </summary>
        </member>
        <member name="P:dss_sharp.Settings.NormVminpu">
            <summary>
            Per Unit minimum voltage for Normal conditions.
            
            Original COM help: https://opendss.epri.com/NormVminpu.html
            </summary>
        </member>
        <member name="P:dss_sharp.Settings.PriceCurve">
            <summary>
            Name of LoadShape object that serves as the source of price signal data for yearly simulations, etc.
            
            Original COM help: https://opendss.epri.com/PriceCurve.html
            </summary>
        </member>
        <member name="P:dss_sharp.Settings.PriceSignal">
            <summary>
            Price Signal for the Circuit
            
            Original COM help: https://opendss.epri.com/PriceSignal.html
            </summary>
        </member>
        <member name="P:dss_sharp.Settings.Trapezoidal">
            <summary>
            Gets value of trapezoidal integration flag in energy meters. Defaults to false.
            
            Original COM help: https://opendss.epri.com/Trapezoidal.html
            </summary>
        </member>
        <member name="P:dss_sharp.Settings.UEregs">
            <summary>
            Array of Integers defining energy meter registers to use for computing UE
            
            Original COM help: https://opendss.epri.com/UEregs.html
            </summary>
        </member>
        <member name="P:dss_sharp.Settings.UEweight">
            <summary>
            Weighting factor applied to UE register values.
            
            Original COM help: https://opendss.epri.com/UEweight.html
            </summary>
        </member>
        <member name="P:dss_sharp.Settings.VoltageBases">
            <summary>
            Array of doubles defining the legal voltage bases in kV L-L
            
            Original COM help: https://opendss.epri.com/VoltageBases.html
            </summary>
        </member>
        <member name="P:dss_sharp.Settings.ZoneLock">
            <summary>
            Locks Zones on energy meters to prevent rebuilding if a circuit change occurs.
            
            Original COM help: https://opendss.epri.com/ZoneLock.html
            </summary>
        </member>
        <member name="P:dss_sharp.Settings.AllocationFactors">
            <summary>
            (write-only) Sets all load allocation factors for all loads defined by XFKVA property to this value.
            </summary>
        </member>
        <member name="P:dss_sharp.Settings.LoadsTerminalCheck">
            <summary>
            Controls whether the terminals are checked when updating the currents in Load component. Defaults to true.
            If the loads are guaranteed to have their terminals closed throughout the simulation, this can be set to false to save some time.
            
            **(API Extension)**
            </summary>
        </member>
        <member name="P:dss_sharp.Settings.IterateDisabled">
            <summary>
            Controls whether `First`/`Next` iteration includes or skips disabled circuit elements.
            The default behavior from OpenDSS is to skip those. The user can still activate the element by name or index.
            
            The default value for IterateDisabled is 0, keeping the original behavior.
            Set it to 1 (or `True`) to include disabled elements.
            Other numeric values are reserved for other potential behaviors.
            
            **(API Extension)**
            </summary>
        </member>
        <member name="M:dss_sharp.Settings.SetPropertyNameStyle(dss_sharp.DSSPropertyNameStyle)">
             <summary>
             Switch the property names according to the target style.
            
             Use this method for compatibility with code that doesn't consider that
             OpenDSS is case insensitive.
             
             **(API Extension)**
             </summary>
        </member>
        <member name="P:dss_sharp.ActiveClass.ActiveClassName">
            <summary>
            Returns name of active class.
            
            Original COM help: https://opendss.epri.com/ActiveClassName.html
            </summary>
        </member>
        <member name="P:dss_sharp.ActiveClass.AllNames">
            <summary>
            Array of strings consisting of all element names in the active class.
            
            Original COM help: https://opendss.epri.com/AllNames.html
            </summary>
        </member>
        <member name="P:dss_sharp.ActiveClass.Count">
            <summary>
            Number of elements in Active Class. Same as NumElements Property.
            
            Original COM help: https://opendss.epri.com/Count.html
            </summary>
        </member>
        <member name="P:dss_sharp.ActiveClass.First">
            <summary>
            Sets first element in the active class to be the active DSS object. 
            If the object is a CktElement, ActiveCktELement also points to this element. 
            
            Returns 0 if none.
            
            Original COM help: https://opendss.epri.com/First.html
            </summary>
        </member>
        <member name="P:dss_sharp.ActiveClass.Name">
            <summary>
            Name of the Active Element of the Active Class
            
            Original COM help: https://opendss.epri.com/Name.html
            </summary>
        </member>
        <member name="P:dss_sharp.ActiveClass.Next">
            <summary>
            Sets next element in active class to be the active DSS object. 
            If the object is a CktElement, ActiveCktElement also points to this element.
            
            Returns 0 if no more.
            
            Original COM help: https://opendss.epri.com/Next.html
            </summary>
        </member>
        <member name="P:dss_sharp.ActiveClass.NumElements">
            <summary>
            Number of elements in this class. Same as Count property.
            
            Original COM help: https://opendss.epri.com/NumElements.html
            </summary>
        </member>
        <member name="P:dss_sharp.ActiveClass.ActiveClassParent">
            <summary>
            Get the name of the parent class of the active class
            
            Original COM help: https://opendss.epri.com/ActiveClassParent.html
            </summary>
        </member>
        <member name="M:dss_sharp.ActiveClass.ToJSON(dss_sharp.DSSJSONFlags)">
            <summary>
            Returns the data (as a list) of all elements from the active class as a JSON-encoded string.
            
            The `options` parameter contains bit-flags to toggle specific features.
            See `Obj_ToJSON` (C-API) for more.
            
            Additionally, the `ExcludeDisabled` flag can be used to excluded disabled elements from the output.
            
            **(API Extension)**
            </summary>
        </member>
        <member name="P:dss_sharp.CapControls.AllNames">
            <summary>
            Array of strings with all CapControl names in the circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.CapControls.Count">
            <summary>
            Number of CapControl objects in active circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.CapControls.First">
            <summary>
            Sets the first CapControl active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.CapControls.Name">
            <summary>
            Sets the active CapControl by Name.
            </summary>
        </member>
        <member name="P:dss_sharp.CapControls.Next">
            <summary>
            Sets the next CapControl active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.CapControls.idx">
            <summary>
            Get/set active CapControl by index; index is 1-based: 1..count
            </summary>
        </member>
        <member name="M:dss_sharp.CapControls.Reset">
            <summary>
            Force a reset of this CapControl.
            
            Original COM help: https://opendss.epri.com/Reset.html
            </summary>
        </member>
        <member name="P:dss_sharp.CapControls.CTratio">
            <summary>
            Transducer ratio from primary current to control current.
            
            Original COM help: https://opendss.epri.com/CTratio.html
            </summary>
        </member>
        <member name="P:dss_sharp.CapControls.Capacitor">
            <summary>
            Name of the Capacitor that is controlled.
            
            Original COM help: https://opendss.epri.com/Capacitor.html
            </summary>
        </member>
        <member name="P:dss_sharp.CapControls.DeadTime">
            <summary>
            Dead time after capacitor is turned OFF before it can be turned back ON for the active CapControl.
            
            Default is 300 sec.
            
            Original COM help: https://opendss.epri.com/DeadTime.html
            </summary>
        </member>
        <member name="P:dss_sharp.CapControls.Delay">
            <summary>
            Time delay [s] to switch on after arming.  Control may reset before actually switching.
            
            Original COM help: https://opendss.epri.com/Delay.html
            </summary>
        </member>
        <member name="P:dss_sharp.CapControls.DelayOff">
            <summary>
            Time delay [s] before switching off a step. Control may reset before actually switching.
            
            Original COM help: https://opendss.epri.com/DelayOff.html
            </summary>
        </member>
        <member name="P:dss_sharp.CapControls.Mode">
            <summary>
            Type of automatic controller.
            
            Original COM help: https://opendss.epri.com/Mode.html
            </summary>
        </member>
        <member name="P:dss_sharp.CapControls.MonitoredObj">
            <summary>
            Full name of the element that PT and CT are connected to.
            
            Original COM help: https://opendss.epri.com/MonitoredObj.html
            </summary>
        </member>
        <member name="P:dss_sharp.CapControls.MonitoredTerm">
            <summary>
            Terminal number on the element that PT and CT are connected to.
            
            Original COM help: https://opendss.epri.com/MonitoredTerm.html
            </summary>
        </member>
        <member name="P:dss_sharp.CapControls.OFFSetting">
            <summary>
            Threshold to switch off a step. See Mode for units.
            
            Original COM help: https://opendss.epri.com/OFFSetting.html
            </summary>
        </member>
        <member name="P:dss_sharp.CapControls.ONSetting">
            <summary>
            Threshold to arm or switch on a step.  See Mode for units.
            
            Original COM help: https://opendss.epri.com/ONSetting.html
            </summary>
        </member>
        <member name="P:dss_sharp.CapControls.PTratio">
            <summary>
            Transducer ratio from primary feeder to control voltage.
            
            Original COM help: https://opendss.epri.com/PTratio.html
            </summary>
        </member>
        <member name="P:dss_sharp.CapControls.UseVoltOverride">
            <summary>
            Enables Vmin and Vmax to override the control Mode
            
            Original COM help: https://opendss.epri.com/UseVoltOverride.html
            </summary>
        </member>
        <member name="P:dss_sharp.CapControls.Vmax">
            <summary>
            With VoltOverride, swtich off whenever PT voltage exceeds this level.
            
            Original COM help: https://opendss.epri.com/Vmax.html
            </summary>
        </member>
        <member name="P:dss_sharp.CapControls.Vmin">
            <summary>
            With VoltOverride, switch ON whenever PT voltage drops below this level.
            
            Original COM help: https://opendss.epri.com/Vmin.html
            </summary>
        </member>
        <member name="M:dss_sharp.Circuit.get_Buses(System.Int32)">
            <summary>
            Activates and returns a bus by its (zero-based) index.
            </summary>
        </member>
        <member name="M:dss_sharp.Circuit.get_Buses(System.String)">
            <summary>
            Activates and returns a bus by its name.
            </summary>
        </member>
        <member name="M:dss_sharp.Circuit.get_CktElements(System.Int32)">
            <summary>
            Activates and returns a CktElement by its global (zero-based) index.
            </summary>
        </member>
        <member name="M:dss_sharp.Circuit.get_CktElements(System.String)">
            <summary>
            Activates and returns a CktElement by its full name (e.g. "load.abc").
            </summary>
        </member>
        <member name="M:dss_sharp.Circuit.Capacity(System.Double,System.Double)">
            <summary>
            Compute the maximum load the active circuit can serve in the PRESENT YEAR.
            
            This method uses the EnergyMeter objects with the registers set with the 
            `SET UEREGS= (...)` command for the AutoAdd functions. 
            
            Returns the metered kW (load + losses - generation) and per unit load multiplier 
            for the loading level at which something in the system reports an overload or 
            undervoltage. If no violations, then it returns the metered kW for peak load 
            for the year (1.0 multiplier). 
            
            Aborts and returns 0 if no EnergyMeters.
            
            Original COM help: https://opendss.epri.com/Capacity1.html
            </summary>
        </member>
        <member name="M:dss_sharp.Circuit.Disable(System.String)">
            <summary>
            Disable a circuit element by name (removes from circuit but leave in database).
            
            Original COM help: https://opendss.epri.com/Disable.html
            </summary>
        </member>
        <member name="M:dss_sharp.Circuit.Enable(System.String)">
            <summary>
            Enable a circuit element by name
            
            Original COM help: https://opendss.epri.com/Enable.html
            </summary>
        </member>
        <member name="M:dss_sharp.Circuit.EndOfTimeStepUpdate">
            <summary>
            Call `EndOfTimeStepCleanup` in SolutionAlgs (Do cleanup, sample monitors, and increment time).
            
            Original COM help: https://opendss.epri.com/EndOfTimeStepUpdate.html
            </summary>
        </member>
        <member name="M:dss_sharp.Circuit.FirstElement">
            <summary>
            Set the first element of active class to be the Active element in the active circuit.
            
            Returns 0 if none.
            
            Original COM help: https://opendss.epri.com/FirstElement.html
            </summary>
        </member>
        <member name="M:dss_sharp.Circuit.FirstPCElement">
            <summary>
            Set the first Power Conversion (PC) element to be the active element.
            
            Returns 0 if none.
            
            Original COM help: https://opendss.epri.com/FirstPCElement.html
            </summary>
        </member>
        <member name="M:dss_sharp.Circuit.FirstPDElement">
            <summary>
            Set the first Power Delivery (PD) element to be the active element.
            
            Returns 0 if none.
            
            Original COM help: https://opendss.epri.com/FirstPDElement.html
            </summary>
        </member>
        <member name="M:dss_sharp.Circuit.AllNodeDistancesByPhase(System.Int32)">
            <summary>
            Returns an array of doubles representing the distances to parent EnergyMeter. Sequence of array corresponds to other node ByPhase properties.
            </summary>
        </member>
        <member name="M:dss_sharp.Circuit.AllNodeNamesByPhase(System.Int32)">
            <summary>
            Return array of strings of the node names for the By Phase criteria. Sequence corresponds to other ByPhase properties.
            </summary>
        </member>
        <member name="M:dss_sharp.Circuit.AllNodeVmagByPhase(System.Int32)">
            <summary>
            Returns Array of doubles represent voltage magnitudes for nodes on the specified phase.
            </summary>
        </member>
        <member name="M:dss_sharp.Circuit.AllNodeVmagPUByPhase(System.Int32)">
            <summary>
            Returns array of per unit voltage magnitudes for each node by phase
            </summary>
        </member>
        <member name="M:dss_sharp.Circuit.NextElement">
            <summary>
            Set the next element of the active class to be the active element in the active circuit.
            Returns 0 if no more elements..
            
            Original COM help: https://opendss.epri.com/NextElement.html
            </summary>
        </member>
        <member name="M:dss_sharp.Circuit.NextPCElement">
            <summary>
            Get the next Power Conversion (PC) element to be the active element.
            
            Original COM help: https://opendss.epri.com/NextPCElement.html
            </summary>
        </member>
        <member name="M:dss_sharp.Circuit.NextPDElement">
            <summary>
            Get the next Power Delivery (PD) element to be the active element.
            
            Original COM help: https://opendss.epri.com/NextPDElement.html
            </summary>
        </member>
        <member name="M:dss_sharp.Circuit.Sample">
            <summary>
            Force all Meters and Monitors to take a sample.
            
            Original COM help: https://opendss.epri.com/Sample.html
            </summary>
        </member>
        <member name="M:dss_sharp.Circuit.SaveSample">
            <summary>
            Force all meters and monitors to save their current buffers.
            
            Original COM help: https://opendss.epri.com/SaveSample.html
            </summary>
        </member>
        <member name="M:dss_sharp.Circuit.SetActiveBus(System.String)">
            <summary>
            Sets Active bus by name. 
            
            Ignores node list. Returns bus index (zero based) compatible with `AllBusNames` and Buses collection.
            
            Original COM help: https://opendss.epri.com/SetActiveBus.html
            </summary>
        </member>
        <member name="M:dss_sharp.Circuit.SetActiveBusi(System.Int32)">
            <summary>
            Set ActiveBus by an integer value. 
            
            0-based index compatible with SetActiveBus return value and AllBusNames indexing. 
            Returns 0 if OK.
            
            Original COM help: https://opendss.epri.com/SetActiveBusi.html
            </summary>
        </member>
        <member name="M:dss_sharp.Circuit.SetActiveClass(System.String)">
            <summary>
            Set the active class by name. 
            
            Use FirstElement, NextElement to iterate through the class. Returns -1 if fails.
            
            Original COM help: https://opendss.epri.com/SetActiveClass.html
            </summary>
        </member>
        <member name="M:dss_sharp.Circuit.SetActiveElement(System.String)">
            <summary>
            Set the Active Circuit Element using the full object name (e.g. "generator.g1"). 
            
            Returns -1 if not found. Else index to be used in CktElements collection or `AllElementNames`.
            
            Original COM help: https://opendss.epri.com/SetActiveElement.html
            </summary>
        </member>
        <member name="M:dss_sharp.Circuit.UpdateStorage">
            <summary>
            Force an update to all storage classes. 
            
            Typically done after a solution. Done automatically in intrinsic solution modes.
            
            Original COM help: https://opendss.epri.com/UpdateStorage.html
            </summary>
        </member>
        <member name="P:dss_sharp.Circuit.AllBusDistances">
            <summary>
            Returns distance from each bus to parent EnergyMeter. Corresponds to sequence in AllBusNames.
            
            Original COM help: https://opendss.epri.com/AllBusDistances.html
            </summary>
        </member>
        <member name="P:dss_sharp.Circuit.AllBusNames">
            <summary>
            Array of strings containing names of all buses in circuit (see AllNodeNames).
            
            Original COM help: https://opendss.epri.com/AllBusNames.html
            </summary>
        </member>
        <member name="P:dss_sharp.Circuit.AllBusVmag">
            <summary>
            Array of magnitudes (doubles) of voltages at all buses
            
            Original COM help: https://opendss.epri.com/AllBusVmag.html
            </summary>
        </member>
        <member name="P:dss_sharp.Circuit.AllBusVmagPu">
            <summary>
            Double Array of all bus voltages (each node) magnitudes in Per unit
            
            Original COM help: https://opendss.epri.com/AllBusVmagPu.html
            </summary>
        </member>
        <member name="P:dss_sharp.Circuit.AllBusVolts">
            <summary>
            Complex array of all bus, node voltages from most recent solution
            
            Original COM help: https://opendss.epri.com/AllBusVolts.html
            </summary>
        </member>
        <member name="P:dss_sharp.Circuit.AllElementLosses">
            <summary>
            Array of total losses (complex) in each circuit element
            
            Original COM help: https://opendss.epri.com/AllElementLosses.html
            </summary>
        </member>
        <member name="P:dss_sharp.Circuit.AllElementNames">
            <summary>
            Array of strings containing Full Name of all elements.
            
            Original COM help: https://opendss.epri.com/AllElementNames.html
            </summary>
        </member>
        <member name="P:dss_sharp.Circuit.AllNodeDistances">
            <summary>
            Returns an array of distances from parent EnergyMeter for each Node. Corresponds to AllBusVMag sequence.
            
            Original COM help: https://opendss.epri.com/AllNodeDistances.html
            </summary>
        </member>
        <member name="P:dss_sharp.Circuit.AllNodeNames">
            <summary>
            Array of strings containing full name of each node in system in same order as returned by AllBusVolts, etc.
            
            Original COM help: https://opendss.epri.com/AllNodeNames.html
            </summary>
        </member>
        <member name="P:dss_sharp.Circuit.LineLosses">
            <summary>
            Complex total line losses in the circuit
            
            Original COM help: https://opendss.epri.com/LineLosses.html
            </summary>
        </member>
        <member name="P:dss_sharp.Circuit.Losses">
            <summary>
            Total losses in active circuit, complex number (two-element array of double).
            
            Original COM help: https://opendss.epri.com/Losses.html
            </summary>
        </member>
        <member name="P:dss_sharp.Circuit.Name">
            <summary>
            Name of the active circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.Circuit.NumBuses">
            <summary>
            Total number of Buses in the circuit.
            
            Original COM help: https://opendss.epri.com/NumBuses.html
            </summary>
        </member>
        <member name="P:dss_sharp.Circuit.NumCktElements">
            <summary>
            Number of CktElements in the circuit.
            
            Original COM help: https://opendss.epri.com/NumCktElements.html
            </summary>
        </member>
        <member name="P:dss_sharp.Circuit.NumNodes">
            <summary>
            Total number of nodes in the circuit.
            
            Original COM help: https://opendss.epri.com/NumNodes1.html
            </summary>
        </member>
        <member name="P:dss_sharp.Circuit.ParentPDElement">
            <summary>
            Sets Parent PD element, if any, to be the active circuit element and returns index>0; Returns 0 if it fails or not applicable.
            
            Original COM help: https://opendss.epri.com/ParentPDElement.html
            </summary>
        </member>
        <member name="P:dss_sharp.Circuit.SubstationLosses">
            <summary>
            Complex losses in all transformers designated to substations.
            
            Original COM help: https://opendss.epri.com/SubstationLosses.html
            </summary>
        </member>
        <member name="P:dss_sharp.Circuit.SystemY">
            <summary>
            System Y matrix (after a solution has been performed). 
            This is deprecated as it returns a dense matrix. Only use it for small systems.
            For large-scale systems, prefer YMatrix.GetCompressedYMatrix.
            
            Original COM help: https://opendss.epri.com/SystemY.html
            </summary>
        </member>
        <member name="P:dss_sharp.Circuit.TotalPower">
            <summary>
            Total power (complex), kVA delivered to the circuit
            
            Original COM help: https://opendss.epri.com/TotalPower.html
            </summary>
        </member>
        <member name="P:dss_sharp.Circuit.YCurrents">
            <summary>
            Array of doubles containing complex injection currents for the present solution. It is the "I" vector of I=YV
            
            Original COM help: https://opendss.epri.com/YCurrents.html
            </summary>
        </member>
        <member name="P:dss_sharp.Circuit.YNodeOrder">
            <summary>
            Array of strings containing the names of the nodes in the same order as the Y matrix
            
            Original COM help: https://opendss.epri.com/YNodeOrder.html
            </summary>
        </member>
        <member name="P:dss_sharp.Circuit.YNodeVarray">
            <summary>
            Complex array of actual node voltages in same order as SystemY matrix.
            
            Original COM help: https://opendss.epri.com/YNodeVarray.html
            </summary>
        </member>
        <member name="M:dss_sharp.Circuit.ElementLosses(System.Int32[])">
            <summary>
            Array of total losses (complex) in a selection of elements.
            Use the element indices (starting at 1) as parameter.
            
            **(API Extension)**
            </summary>
        </member>
        <member name="M:dss_sharp.Circuit.ToJSON(dss_sharp.DSSJSONFlags)">
            <summary>
            Returns data for all objects and basic circuit properties as a JSON-encoded string.
            
            The JSON data is organized using the JSON schema proposed at 
            https://github.com/dss-extensions/AltDSS-Schema
            
            The `options` parameter contains bit-flags to toggle specific features.
            See the enum `DSSJSONFlags` or `Obj_ToJSON` (C-API) for more.
            
            **(API Extension)**
            </summary>
        </member>
        <member name="M:dss_sharp.Circuit.FromJSON(System.String,dss_sharp.DSSJSONFlags)">
            <summary>
            Replaces the circuit, if any, with the one provided from a JSON-encoded string.
            
            The expected layout is defined from the JSON schema proposed at
            https://github.com/dss-extensions/AltDSS-Schema
            
            The `options` parameter contains bit-flags to toggle specific features.
            See the enum `DSSJSONFlags`.
            
            **(API Extension)**
            </summary>
        </member>
        <member name="M:dss_sharp.Circuit.Save(System.String,dss_sharp.DSSSaveFlags)">
            <summary>
            Equivalent of the "save circuit" DSS command, but allows customization
            through the `saveFlags` argument, which is a set of bit flags. 
            See the "DSSSaveFlags" enumeration for available flags:
            
            - `CalcVoltageBases`: Include the command CalcVoltageBases.
            - `SetVoltageBases`: Include commands to set the voltage bases individually.
            - `IncludeOptions`: Include most of the options (from the Set/Get DSS commands).
            - `IncludeDisabled`: Include disabled circuit elements (and LoadShapes).
            - `ExcludeDefault`: Exclude default DSS items if they are not modified by the user.
            - `SingleFile`: Use a single file instead of a folder for output.
            - `KeepOrder`: Save the circuit elements in the order they were loaded in the active circuit. Guarantees better reproducibility, especially when the system is ill-conditioned. Requires "SingleFile" flag.
            - `ExcludeMeterZones`: Do not export meter zones (as "feeders") separately. Has no effect when using a single file.
            - `IsOpen`: Export commands to open terminals of elements.
            - `ToString`: to the result string. Requires "SingleFile" flag.
            
            If `SingleFile` is enabled, the first argument (`dirOrFilePath`) is the file path,
            otherwise it is the folder path. For string output, the argument is not used.
            
            **(API Extension)**
            </summary>
        </member>
        <member name="M:dss_sharp.CtrlQueue.ClearActions">
            <summary>
            Clear all actions from the Control Proxy's Action List (they are popped off the list). 
            
            Original COM help: https://opendss.epri.com/ClearActions.html
            </summary>
        </member>
        <member name="M:dss_sharp.CtrlQueue.ClearQueue">
            <summary>
            Clear the control queue.
            
            Original COM help: https://opendss.epri.com/ClearQueue.html
            </summary>
        </member>
        <member name="M:dss_sharp.CtrlQueue.Delete(System.Int32)">
            <summary>
            Delete an Action from the DSS Control Queue by the handle that is returned when the action is added.
            
            (The Push function returns the handle.)
            
            Original COM help: https://opendss.epri.com/Delete.html
            </summary>
        </member>
        <member name="M:dss_sharp.CtrlQueue.DoAllQueue">
            <summary>
            Execute all actions currently on the Control Queue. 
            
            Side effect: clears the queue.
            
            Original COM help: https://opendss.epri.com/DoAllQueue.html
            </summary>
        </member>
        <member name="M:dss_sharp.CtrlQueue.Show">
            <summary>
            Export the queue to a CSV table and show it.
            
            Original COM help: https://opendss.epri.com/Show.html
            </summary>
        </member>
        <member name="P:dss_sharp.CtrlQueue.ActionCode">
            <summary>
            Code for the active action. Integer code to tell the control device what to do.
            
            Use this to determine what the user-defined controls are supposed to do.
            It can be any 32-bit integer of the user's choosing and is the same value that the control pushed onto the control queue earlier.
            
            Original COM help: https://opendss.epri.com/ActionCode.html
            </summary>
        </member>
        <member name="P:dss_sharp.CtrlQueue.DeviceHandle">
            <summary>
            Handle (User defined) to device that must act on the pending action.
            
            The user-written code driving the interface may support more than one 
            control element as necessary to perform the simulation. This handle is
            an index returned to the user program that lets the program know which
            control is to perform the active action.
            
            Original COM help: https://opendss.epri.com/DeviceHandle.html
            </summary>
        </member>
        <member name="P:dss_sharp.CtrlQueue.NumActions">
            <summary>
            Number of Actions on the current action list (that have been popped off the control queue by CheckControlActions)
            
            Original COM help: https://opendss.epri.com/NumActions.html
            </summary>
        </member>
        <member name="M:dss_sharp.CtrlQueue.Push(System.Int32,System.Double,System.Int32,System.Int32)">
            <summary>
            Push a control action onto the DSS control queue by time, action code, and device handle (user defined). Returns Control Queue handle.
            
            Original COM help: https://opendss.epri.com/Push.html
            </summary>
        </member>
        <member name="P:dss_sharp.CtrlQueue.PopAction">
            <summary>
            Pops next action off the action list and makes it the active action. Returns zero if none.
            
            Original COM help: https://opendss.epri.com/PopAction.html
            </summary>
        </member>
        <member name="P:dss_sharp.CtrlQueue.Queue">
            <summary>
            Array of strings containing the entire queue in CSV format
            
            Original COM help: https://opendss.epri.com/Queue.html
            </summary>
        </member>
        <member name="P:dss_sharp.CtrlQueue.QueueSize">
            <summary>
            Number of items on the OpenDSS control Queue
            
            Original COM help: https://opendss.epri.com/QueueSize.html
            </summary>
        </member>
        <member name="P:dss_sharp.CtrlQueue.Action">
            <summary>
            (write-only) Set the active action by index
            
            Original COM help: https://opendss.epri.com/Action.html
            </summary>
        </member>
        <member name="P:dss_sharp.DSSElement.AllPropertyNames">
            <summary>
            Array of strings containing the names of all properties for the active DSS object.
            
            Original COM help: https://opendss.epri.com/AllPropertyNames1.html
            </summary>
        </member>
        <member name="P:dss_sharp.DSSElement.Name">
            <summary>
            Full Name of Active DSS Object (general element or circuit element).
            
            Original COM help: https://opendss.epri.com/Name5.html
            </summary>
        </member>
        <member name="P:dss_sharp.DSSElement.NumProperties">
            <summary>
            Number of Properties for the active DSS object.
            
            Original COM help: https://opendss.epri.com/NumProperties1.html
            </summary>
        </member>
        <member name="M:dss_sharp.DSSElement.ToJSON(dss_sharp.DSSJSONFlags)">
            <summary>
            Returns the properties of the active DSS object as a JSON-encoded string.
            
            The `options` parameter contains bit-flags to toggle specific features.
            See `Obj_ToJSON` (C-API) for more.
            
            **(API Extension)**
            </summary>
        </member>
        <member name="P:dss_sharp.DSSProgress.Caption">
            <summary>
            (write-only) Caption to appear on the bottom of the DSS Progress form.
            
            Original COM help: https://opendss.epri.com/Caption.html
            </summary>
        </member>
        <member name="P:dss_sharp.DSSProgress.PctProgress">
            <summary>
            (write-only) Percent progress to indicate [0..100]
            
            Original COM help: https://opendss.epri.com/PctProgress.html
            </summary>
        </member>
        <member name="P:dss_sharp.DSSProperty.Description">
            <summary>
            Description of the property.
            
            Original COM help: https://opendss.epri.com/Description.html
            </summary>
        </member>
        <member name="P:dss_sharp.DSSProperty.Name">
            <summary>
            Name of Property
            
            Original COM help: https://opendss.epri.com/Name6.html
            </summary>
        </member>
        <member name="P:dss_sharp.DSSProperty.Val">
            <summary>
            Get/set the value of the active property. The value must be specified as a string.
            
            Original COM help: https://opendss.epri.com/Val.html
            </summary>
        </member>
        <member name="M:dss_sharp.DSS_Executive.Command(System.Int32)">
            <summary>
            Get i-th command
            
            Original COM help: https://opendss.epri.com/Command.html
            </summary>
        </member>
        <member name="M:dss_sharp.DSS_Executive.CommandHelp(System.Int32)">
            <summary>
            Get help string for i-th command
            
            Original COM help: https://opendss.epri.com/CommandHelp.html
            </summary>
        </member>
        <member name="M:dss_sharp.DSS_Executive.Option(System.Int32)">
            <summary>
            Get i-th option
            
            Original COM help: https://opendss.epri.com/Option.html
            </summary>
        </member>
        <member name="M:dss_sharp.DSS_Executive.OptionHelp(System.Int32)">
            <summary>
            Get help string for i-th option
            
            Original COM help: https://opendss.epri.com/OptionHelp.html
            </summary>
        </member>
        <member name="M:dss_sharp.DSS_Executive.OptionValue(System.Int32)">
            <summary>
            Get present value of i-th option
            
            Original COM help: https://opendss.epri.com/OptionValue.html
            </summary>
        </member>
        <member name="P:dss_sharp.DSS_Executive.NumCommands">
            <summary>
            Number of DSS Executive Commands
            
            Original COM help: https://opendss.epri.com/NumCommands.html
            </summary>
        </member>
        <member name="P:dss_sharp.DSS_Executive.NumOptions">
            <summary>
            Number of DSS Executive Options
            
            Original COM help: https://opendss.epri.com/NumOptions.html
            </summary>
        </member>
        <member name="P:dss_sharp.Error.Description">
            <summary>
            Description of error for last operation
            
            Original COM help: https://opendss.epri.com/Description1.html
            </summary>
        </member>
        <member name="P:dss_sharp.Error.Number">
            <summary>
            Error Number (returns current value and then resets to zero)
            
            Original COM help: https://opendss.epri.com/Number.html
            </summary>
        </member>
        <member name="P:dss_sharp.Error.EarlyAbort">
            <summary>
            EarlyAbort controls whether all errors halts the DSS script processing (Compile/Redirect), defaults to true.
            
            **(API Extension)**
            </summary>
        </member>
        <member name="P:dss_sharp.Error.ExtendedErrors">
            <summary>
            Controls whether the extended error mechanism is used. Defaults to true.
            
            Extended errors are errors derived from checks across the API to ensure
            a valid state. Although many of these checks are already present in the 
            original/official COM interface, the checks do not produce any error 
            message. An error value can be returned by a function but this value
            can, for many of the functions, be a valid value. As such, the user
            has no means to detect an invalid API call. 
            
            Extended errors use the Error interface to provide a more clear message
            and should help users, especially new users, to find usage issues earlier.
            Combined with the automatic exception mapping mechanism (see `UseExceptions`),
            a more modern and safe experience is achieved in dss_sharp.
            
            The current default state is ON. For compatibility, the user can turn it
            off to restore the previous behavior.
            
            **(API Extension)**
            </summary>
        </member>
        <member name="P:dss_sharp.Error.UseExceptions">
            <summary>
            UseExceptions controls whether the error numbers from the DSS engine are
            automatically mapped to .NET exceptions. The default and recommended state
            is `true`, but users can disable this to achieve better compatibility with
            old, COM-based code. Note that most code from OpenDSS users "in the wild" 
            do not check for errors, so the exception mapping can unearth hidden errors
            that were being ignored in old code.
            
            NOTE: This is a global, static setting. Affects all DSS instances in the process.
            
            (API Extension)
            </summary>
        </member>
        <member name="P:dss_sharp.Fuses.AllNames">
            <summary>
            Array of strings with all Fuse names in the circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.Fuses.Count">
            <summary>
            Number of Fuse objects in active circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.Fuses.First">
            <summary>
            Sets the first Fuse active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.Fuses.Name">
            <summary>
            Sets the active Fuse by Name.
            </summary>
        </member>
        <member name="P:dss_sharp.Fuses.Next">
            <summary>
            Sets the next Fuse active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.Fuses.idx">
            <summary>
            Get/set active Fuse by index; index is 1-based: 1..count
            </summary>
        </member>
        <member name="M:dss_sharp.Fuses.Close">
            <summary>
            Close all phases of the fuse.
            
            Original COM help: https://opendss.epri.com/Close3.html
            </summary>
        </member>
        <member name="M:dss_sharp.Fuses.IsBlown">
            <summary>
            Current state of the fuses. TRUE if any fuse on any phase is blown. Else FALSE.
            
            Original COM help: https://opendss.epri.com/IsBlown.html
            </summary>
        </member>
        <member name="M:dss_sharp.Fuses.Open">
            <summary>
            Manual opening of all phases of the fuse.
            
            Original COM help: https://opendss.epri.com/Open2.html
            </summary>
        </member>
        <member name="M:dss_sharp.Fuses.Reset">
            <summary>
            Reset fuse to normal state.
            
            Original COM help: https://opendss.epri.com/Reset7.html
            </summary>
        </member>
        <member name="P:dss_sharp.Fuses.Delay">
            <summary>
            A fixed delay time in seconds added to the fuse blowing time determined by the TCC curve. Default is 0.
            This represents a fuse clear or other delay.
            
            Original COM help: https://opendss.epri.com/Delay1.html
            </summary>
        </member>
        <member name="P:dss_sharp.Fuses.MonitoredObj">
            <summary>
            Full name of the circuit element to which the fuse is connected.
            
            Original COM help: https://opendss.epri.com/MonitoredObj1.html
            </summary>
        </member>
        <member name="P:dss_sharp.Fuses.MonitoredTerm">
            <summary>
            Terminal number to which the fuse is connected.
            
            Original COM help: https://opendss.epri.com/MonitoredTerm1.html
            </summary>
        </member>
        <member name="P:dss_sharp.Fuses.NumPhases">
            <summary>
            Number of phases, this fuse. 
            
            Original COM help: https://opendss.epri.com/NumPhases1.html
            </summary>
        </member>
        <member name="P:dss_sharp.Fuses.RatedCurrent">
            <summary>
            Multiplier or actual amps for the TCCcurve object. Defaults to 1.0. 
            
            Multiply current values of TCC curve by this to get actual amps.
            
            Original COM help: https://opendss.epri.com/RatedCurrent.html
            </summary>
        </member>
        <member name="P:dss_sharp.Fuses.SwitchedObj">
            <summary>
            Full name of the circuit element switch that the fuse controls. 
            Defaults to the MonitoredObj.
            
            Original COM help: https://opendss.epri.com/SwitchedObj.html
            </summary>
        </member>
        <member name="P:dss_sharp.Fuses.SwitchedTerm">
            <summary>
            Number of the terminal of the controlled element containing the switch controlled by the fuse.
            
            Original COM help: https://opendss.epri.com/SwitchedTerm.html
            </summary>
        </member>
        <member name="P:dss_sharp.Fuses.TCCcurve">
            <summary>
            Name of the TCCcurve object that determines fuse blowing.
            
            Original COM help: https://opendss.epri.com/TCCcurve.html
            </summary>
        </member>
        <member name="P:dss_sharp.Fuses.State">
            <summary>
            Array of strings indicating the state of each phase of the fuse.
            
            Original COM help: https://opendss.epri.com/State2.html
            </summary>
        </member>
        <member name="P:dss_sharp.Fuses.NormalState">
            <summary>
            Array of strings indicating the normal state of each phase of the fuse.
            
            Original COM help: https://opendss.epri.com/NormalState2.html
            </summary>
        </member>
        <member name="P:dss_sharp.ISources.AllNames">
            <summary>
            Array of strings with all ISource names in the circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.ISources.Count">
            <summary>
            Number of ISource objects in active circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.ISources.First">
            <summary>
            Sets the first ISource active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.ISources.Name">
            <summary>
            Sets the active ISource by Name.
            </summary>
        </member>
        <member name="P:dss_sharp.ISources.Next">
            <summary>
            Sets the next ISource active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.ISources.idx">
            <summary>
            Get/set active ISource by index; index is 1-based: 1..count
            </summary>
        </member>
        <member name="P:dss_sharp.ISources.Amps">
            <summary>
            Magnitude of the ISource in amps
            
            Original COM help: https://opendss.epri.com/Amps.html
            </summary>
        </member>
        <member name="P:dss_sharp.ISources.AngleDeg">
            <summary>
            Phase angle for ISource, degrees
            
            Original COM help: https://opendss.epri.com/AngleDeg.html
            </summary>
        </member>
        <member name="P:dss_sharp.ISources.Frequency">
            <summary>
            The present frequency of the ISource, Hz
            
            Original COM help: https://opendss.epri.com/Frequency.html
            </summary>
        </member>
        <member name="P:dss_sharp.LineCodes.AllNames">
            <summary>
            Array of strings with all LineCode names in the circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.LineCodes.Count">
            <summary>
            Number of LineCode objects in active circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.LineCodes.First">
            <summary>
            Sets the first LineCode active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.LineCodes.Name">
            <summary>
            Sets the active LineCode by Name.
            </summary>
        </member>
        <member name="P:dss_sharp.LineCodes.Next">
            <summary>
            Sets the next LineCode active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.LineCodes.idx">
            <summary>
            Get/set active LineCode by index; index is 1-based: 1..count
            </summary>
        </member>
        <member name="P:dss_sharp.LineCodes.C0">
            <summary>
            Zero-sequence capacitance, nF per unit length
            
            Original COM help: https://opendss.epri.com/C2.html
            </summary>
        </member>
        <member name="P:dss_sharp.LineCodes.C1">
            <summary>
            Positive-sequence capacitance, nF per unit length
            
            Original COM help: https://opendss.epri.com/C3.html
            </summary>
        </member>
        <member name="P:dss_sharp.LineCodes.Cmatrix">
            <summary>
            Capacitance matrix, nF per unit length
            
            Original COM help: https://opendss.epri.com/Cmatrix1.html
            </summary>
        </member>
        <member name="P:dss_sharp.LineCodes.EmergAmps">
            <summary>
            Emergency ampere rating
            
            Original COM help: https://opendss.epri.com/EmergAmps2.html
            </summary>
        </member>
        <member name="P:dss_sharp.LineCodes.IsZ1Z0">
            <summary>
            Flag denoting whether impedance data were entered in symmetrical components
            
            Original COM help: https://opendss.epri.com/IsZ1Z0.html
            </summary>
        </member>
        <member name="P:dss_sharp.LineCodes.NormAmps">
            <summary>
            Normal Ampere rating
            
            Original COM help: https://opendss.epri.com/NormAmps1.html
            </summary>
        </member>
        <member name="P:dss_sharp.LineCodes.Phases">
            <summary>
            Number of Phases
            
            Original COM help: https://opendss.epri.com/Phases2.html
            </summary>
        </member>
        <member name="P:dss_sharp.LineCodes.R0">
            <summary>
            Zero-Sequence Resistance, ohms per unit length
            
            Original COM help: https://opendss.epri.com/R2.html
            </summary>
        </member>
        <member name="P:dss_sharp.LineCodes.R1">
            <summary>
            Positive-sequence resistance ohms per unit length
            
            Original COM help: https://opendss.epri.com/R3.html
            </summary>
        </member>
        <member name="P:dss_sharp.LineCodes.Rmatrix">
            <summary>
            Resistance matrix, ohms per unit length
            
            Original COM help: https://opendss.epri.com/Rmatrix1.html
            </summary>
        </member>
        <member name="P:dss_sharp.LineCodes.X0">
            <summary>
            Zero Sequence Reactance, Ohms per unit length
            
            Original COM help: https://opendss.epri.com/X2.html
            </summary>
        </member>
        <member name="P:dss_sharp.LineCodes.X1">
            <summary>
            Positive-sequence reactance, ohms per unit length
            
            Original COM help: https://opendss.epri.com/X3.html
            </summary>
        </member>
        <member name="P:dss_sharp.LineCodes.Xmatrix">
            <summary>
            Reactance matrix, ohms per unit length
            
            Original COM help: https://opendss.epri.com/Xmatrix1.html
            </summary>
        </member>
        <member name="M:dss_sharp.Monitors.Channel(System.Int32)">
            <summary>
            Array of float64 for the specified channel (usage: MyArray = DSSMonitor.Channel(i)).
            A Save or SaveAll should be executed first. Done automatically by most standard solution modes.
            Channels start at index 1.
            </summary>
        </member>
        <member name="P:dss_sharp.Monitors.AllNames">
            <summary>
            Array of strings with all Monitor names in the circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.Monitors.Count">
            <summary>
            Number of Monitor objects in active circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.Monitors.First">
            <summary>
            Sets the first Monitor active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.Monitors.Name">
            <summary>
            Sets the active Monitor by Name.
            </summary>
        </member>
        <member name="P:dss_sharp.Monitors.Next">
            <summary>
            Sets the next Monitor active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.Monitors.idx">
            <summary>
            Get/set active Monitor by index; index is 1-based: 1..count
            </summary>
        </member>
        <member name="M:dss_sharp.Monitors.Process">
            <summary>
            Post-process monitor samples taken so far, e.g., Pst for mode=4.
            
            Original COM help: https://opendss.epri.com/Process.html
            </summary>
        </member>
        <member name="M:dss_sharp.Monitors.ProcessAll">
            <summary>
            Post-process all monitor samples taken so far, e.g., Pst for mode=4.
            
            Original COM help: https://opendss.epri.com/ProcessAll.html
            </summary>
        </member>
        <member name="M:dss_sharp.Monitors.Reset">
            <summary>
            Reset active Monitor object.
            
            Original COM help: https://opendss.epri.com/Reset3.html
            </summary>
        </member>
        <member name="M:dss_sharp.Monitors.ResetAll">
            <summary>
            Reset all Monitor objects.
            
            Original COM help: https://opendss.epri.com/ResetAll1.html
            </summary>
        </member>
        <member name="M:dss_sharp.Monitors.Sample">
            <summary>
            Instruct the active Monitor to take a sample of the present state.
            
            Original COM help: https://opendss.epri.com/Sample2.html
            </summary>
        </member>
        <member name="M:dss_sharp.Monitors.SampleAll">
            <summary>
            Instruct all Monitor objects to take a sample of the present state.
            
            Original COM help: https://opendss.epri.com/SampleAll1.html
            </summary>
        </member>
        <member name="M:dss_sharp.Monitors.Save">
            <summary>
            Instructs the active monitor to save its current sample buffer to its monitor stream. 
            
            After the data is on the stream, you can access the ByteStream or channel data. 
            
            **Most standard solution modes do this automatically.**
            
            Original COM help: https://opendss.epri.com/Save1.html
            </summary>
        </member>
        <member name="M:dss_sharp.Monitors.SaveAll">
            <summary>
            Instructs the all monitor objects to save their current sample buffers to the respective monitor streams.
            
            **Most standard solution modes do this automatically.**
            
            Original COM help: https://opendss.epri.com/SaveAll1.html
            </summary>
        </member>
        <member name="M:dss_sharp.Monitors.Show">
            <summary>
            Convert the monitor data to text and displays it with the text editor.
            
            Original COM help: https://opendss.epri.com/Show3.html
            </summary>
        </member>
        <member name="P:dss_sharp.Monitors.ByteStream">
            <summary>
            Byte Array containing monitor stream values. Make sure a "save" is done first (standard solution modes do this automatically)
            
            Original COM help: https://opendss.epri.com/ByteStream.html
            </summary>
        </member>
        <member name="P:dss_sharp.Monitors.Element">
            <summary>
            Full object name of element being monitored.
            
            Original COM help: https://opendss.epri.com/Element.html
            </summary>
        </member>
        <member name="P:dss_sharp.Monitors.FileName">
            <summary>
            Name of CSV file associated with active Monitor.
            
            Original COM help: https://opendss.epri.com/FileName.html
            </summary>
        </member>
        <member name="P:dss_sharp.Monitors.FileVersion">
            <summary>
            Monitor File Version (integer)
            
            Original COM help: https://opendss.epri.com/FileVersion.html
            </summary>
        </member>
        <member name="P:dss_sharp.Monitors.Header">
            <summary>
            Header string;  Array of strings containing Channel names
            
            Original COM help: https://opendss.epri.com/Header.html
            </summary>
        </member>
        <member name="P:dss_sharp.Monitors.Mode">
            <summary>
            Set Monitor mode (bitmask integer - see DSS Help)
            
            Original COM help: https://opendss.epri.com/Mode1.html
            </summary>
        </member>
        <member name="P:dss_sharp.Monitors.NumChannels">
            <summary>
            Number of Channels in the active Monitor
            
            Original COM help: https://opendss.epri.com/NumChannels.html
            </summary>
        </member>
        <member name="P:dss_sharp.Monitors.RecordSize">
            <summary>
            Size of each record in ByteStream (Integer). Same as NumChannels.
            
            Original COM help: https://opendss.epri.com/RecordSize.html
            </summary>
        </member>
        <member name="P:dss_sharp.Monitors.SampleCount">
            <summary>
            Number of Samples in Monitor at Present
            
            Original COM help: https://opendss.epri.com/SampleCount.html
            </summary>
        </member>
        <member name="P:dss_sharp.Monitors.Terminal">
            <summary>
            Terminal number of element being monitored.
            
            Original COM help: https://opendss.epri.com/Terminal.html
            </summary>
        </member>
        <member name="P:dss_sharp.Monitors.dblFreq">
            <summary>
            Array of doubles containing frequency values for harmonics mode solutions; Empty for time mode solutions (use dblHour)
            
            Original COM help: https://opendss.epri.com/dblFreq.html
            </summary>
        </member>
        <member name="P:dss_sharp.Monitors.dblHour">
            <summary>
            Array of doubles containing time value in hours for time-sampled monitor values; Empty if frequency-sampled values for harmonics solution (see dblFreq)
            
            Original COM help: https://opendss.epri.com/dblHour.html
            </summary>
        </member>
        <member name="M:dss_sharp.Parser.Matrix(System.Int32)">
            <summary>
            Use this property to parse a Matrix token in OpenDSS format.  Returns square matrix of order specified. Order same as default Fortran order: column by column.
            </summary>
        </member>
        <member name="M:dss_sharp.Parser.SymMatrix(System.Int32)">
            <summary>
            Use this property to parse a matrix token specified in lower triangle form. Symmetry is forced.
            </summary>
        </member>
        <member name="M:dss_sharp.Parser.Vector(System.Int32)">
            <summary>
            Returns token as array of doubles. For parsing quoted array syntax.
            </summary>
        </member>
        <member name="M:dss_sharp.Parser.ResetDelimiters">
            <summary>
            Reset the delimiters to their default values.
            
            Original COM help: https://opendss.epri.com/ResetDelimiters.html
            </summary>
        </member>
        <member name="P:dss_sharp.Parser.AutoIncrement">
            <summary>
            Default is FALSE. If TRUE, the parser automatically advances to next token after DblValue, IntValue, or StrValue. Simpler when you don't need to check for parameter names.
            
            Original COM help: https://opendss.epri.com/AutoIncrement.html
            </summary>
        </member>
        <member name="P:dss_sharp.Parser.BeginQuote">
            <summary>
            Get/Set String containing the the characters for Quoting in OpenDSS scripts. Matching pairs defined in EndQuote. Default is "'([{.
            
            Original COM help: https://opendss.epri.com/BeginQuote.html
            </summary>
        </member>
        <member name="P:dss_sharp.Parser.CmdString">
            <summary>
            String to be parsed. Loading this string resets the Parser to the beginning of the line. Then parse off the tokens in sequence.
            
            Original COM help: https://opendss.epri.com/CmdString.html
            </summary>
        </member>
        <member name="P:dss_sharp.Parser.DblValue">
            <summary>
            Return next parameter as a double.
            
            Original COM help: https://opendss.epri.com/DblValue.html
            </summary>
        </member>
        <member name="P:dss_sharp.Parser.Delimiters">
            <summary>
            String defining hard delimiters used to separate token on the command string. Default is , and =. The = separates token name from token value. These override whitespace to separate tokens.
            
            Original COM help: https://opendss.epri.com/Delimiters.html
            </summary>
        </member>
        <member name="P:dss_sharp.Parser.EndQuote">
            <summary>
            String containing characters, in order, that match the beginning quote characters in BeginQuote. Default is "')]}
            
            Original COM help: https://opendss.epri.com/EndQuote.html
            </summary>
        </member>
        <member name="P:dss_sharp.Parser.IntValue">
            <summary>
            Return next parameter as a long integer.
            
            Original COM help: https://opendss.epri.com/IntValue.html
            </summary>
        </member>
        <member name="P:dss_sharp.Parser.NextParam">
            <summary>
            Get next token and return tag name (before = sign) if any. See AutoIncrement.
            
            Original COM help: https://opendss.epri.com/NextParam.html
            </summary>
        </member>
        <member name="P:dss_sharp.Parser.StrValue">
            <summary>
            Return next parameter as a string
            
            Original COM help: https://opendss.epri.com/StrValue.html
            </summary>
        </member>
        <member name="P:dss_sharp.Parser.WhiteSpace">
            <summary>
            Get/set the characters used for White space in the command string.  Default is blank and Tab.
            
            Original COM help: https://opendss.epri.com/WhiteSpace.html
            </summary>
        </member>
        <member name="P:dss_sharp.ReduceCkt.Zmag">
            <summary>
            Zmag (ohms) for Reduce Option for Z of short lines
            
            Original COM help: https://opendss.epri.com/Zmag.html
            </summary>
        </member>
        <member name="P:dss_sharp.ReduceCkt.KeepLoad">
            <summary>
            Keep load flag for Reduction options that remove branches
            
            Original COM help: https://opendss.epri.com/KeepLoad.html
            </summary>
        </member>
        <member name="P:dss_sharp.ReduceCkt.EditString">
            <summary>
            Edit String for RemoveBranches functions
            
            Original COM help: https://opendss.epri.com/EditString.html
            </summary>
        </member>
        <member name="P:dss_sharp.ReduceCkt.StartPDElement">
            <summary>
            Start element for Remove Branch function
            
            Original COM help: https://opendss.epri.com/StartPDElement.html
            </summary>
        </member>
        <member name="P:dss_sharp.ReduceCkt.EnergyMeter">
            <summary>
            Name of EnergyMeter to use for reduction
            
            Original COM help: https://opendss.epri.com/EnergyMeter1.html
            </summary>
        </member>
        <member name="M:dss_sharp.ReduceCkt.SaveCircuit(System.String)">
            <summary>
            Save present (reduced) circuit
            Filename is listed in the Text Result interface
            </summary>
        </member>
        <member name="M:dss_sharp.ReduceCkt.DoDefault">
            <summary>
            Do Default Reduction algorithm
            
            Original COM help: https://opendss.epri.com/DoDefault.html
            </summary>
        </member>
        <member name="M:dss_sharp.ReduceCkt.DoShortLines">
            <summary>
            Do ShortLines algorithm: Set Zmag first if you don't want the default
            
            Original COM help: https://opendss.epri.com/DoShortLines.html
            </summary>
        </member>
        <member name="M:dss_sharp.ReduceCkt.DoDangling">
            <summary>
            Reduce Dangling Algorithm; branches with nothing connected
            
            Original COM help: https://opendss.epri.com/DoDangling.html
            </summary>
        </member>
        <member name="M:dss_sharp.ReduceCkt.DoLoopBreak">
            <summary>
            Break (disable) all the loops found in the active circuit.
            
            Disables one of the Line objects at the head of a loop to force the circuit to be radial.
            </summary>
        </member>
        <member name="M:dss_sharp.ReduceCkt.DoParallelLines">
            <summary>
            Merge all parallel lines found in the circuit to facilitate its reduction.
            </summary>
        </member>
        <member name="M:dss_sharp.ReduceCkt.DoSwitches">
            <summary>
            Merge Line objects in which the IsSwitch property is true with the down-line Line object.
            </summary>
        </member>
        <member name="M:dss_sharp.ReduceCkt.Do1phLaterals">
            <summary>
            Remove all 1-phase laterals in the active EnergyMeter's zone.
            
            Loads and other shunt elements are moved to the parent 3-phase bus.
            </summary>
        </member>
        <member name="M:dss_sharp.ReduceCkt.DoBranchRemove">
            <summary>
            Remove (disable) all branches down-line from the active PDElement. 
            
            Circuit must have an EnergyMeter on this branch.
            If KeepLoad=Y (default), a new Load element is defined and kW, kvar are set to present power flow solution for the first element eliminated. 
            The EditString is applied to each new Load element defined.
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.AddType">
            <summary>
            Type of device to add in AutoAdd Mode: {dssGen (Default) | dssCap}
            
            Original COM help: https://opendss.epri.com/AddType.html
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.Algorithm">
            <summary>
            Base Solution algorithm
            
            Original COM help: https://opendss.epri.com/Algorithm.html
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.Capkvar">
            <summary>
            Capacitor kvar for adding capacitors in AutoAdd mode
            
            Original COM help: https://opendss.epri.com/Capkvar.html
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.ControlActionsDone">
            <summary>
            Flag indicating the control actions are done.
            
            Original COM help: https://opendss.epri.com/ControlActionsDone.html
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.ControlIterations">
            <summary>
            Value of the control iteration counter
            
            Original COM help: https://opendss.epri.com/ControlIterations.html
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.ControlMode">
            <summary>
            Modes for control devices
            
            Original COM help: https://opendss.epri.com/ControlMode.html
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.Converged">
            <summary>
            Flag to indicate whether the circuit solution converged
            
            Original COM help: https://opendss.epri.com/Converged.html
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.DefaultDaily">
            <summary>
            Default daily load shape (defaults to "Default")
            
            Original COM help: https://opendss.epri.com/DefaultDaily.html
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.DefaultYearly">
            <summary>
            Default Yearly load shape (defaults to "Default")
            
            Original COM help: https://opendss.epri.com/DefaultYearly.html
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.EventLog">
            <summary>
            Array of strings containing the Event Log
            
            Original COM help: https://opendss.epri.com/EventLog.html
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.Frequency">
            <summary>
            Set the Frequency for next solution
            
            Original COM help: https://opendss.epri.com/Frequency1.html
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.GenMult">
            <summary>
            Default Multiplier applied to generators (like LoadMult)
            
            Original COM help: https://opendss.epri.com/GenMult.html
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.GenPF">
            <summary>
            PF for generators in AutoAdd mode
            
            Original COM help: https://opendss.epri.com/GenPF.html
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.GenkW">
            <summary>
            Generator kW for AutoAdd mode
            
            Original COM help: https://opendss.epri.com/GenkW.html
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.Hour">
            <summary>
            Set Hour for time series solutions.
            
            Original COM help: https://opendss.epri.com/Hour.html
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.IntervalHrs">
            <summary>
            Get/Set the Solution.IntervalHrs variable used for devices that integrate / custom solution algorithms
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.Iterations">
            <summary>
            Number of iterations taken for last solution. (Same as Totaliterations)
            
            Original COM help: https://opendss.epri.com/Iterations.html
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.LDCurve">
            <summary>
            Load-Duration Curve name for LD modes
            
            Original COM help: https://opendss.epri.com/LDCurve.html
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.LoadModel">
            <summary>
            Load Model: {dssPowerFlow (default) | dssAdmittance}
            
            Original COM help: https://opendss.epri.com/LoadModel.html
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.LoadMult">
            <summary>
            Default load multiplier applied to all non-fixed loads
            
            Original COM help: https://opendss.epri.com/LoadMult.html
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.MaxControlIterations">
            <summary>
            Maximum allowable control iterations
            
            Original COM help: https://opendss.epri.com/MaxControlIterations.html
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.MaxIterations">
            <summary>
            Max allowable iterations.
            
            Original COM help: https://opendss.epri.com/MaxIterations.html
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.MinIterations">
            <summary>
            Minimum number of iterations required for a power flow solution.
            
            Original COM help: https://opendss.epri.com/MinIterations.html
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.Mode">
            <summary>
            Set present solution mode
            
            Original COM help: https://opendss.epri.com/Mode2.html
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.ModeID">
            <summary>
            ID (text) of the present solution mode
            
            Original COM help: https://opendss.epri.com/ModeID.html
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.MostIterationsDone">
            <summary>
            Max number of iterations required to converge at any control iteration of the most recent solution.
            
            Original COM help: https://opendss.epri.com/MostIterationsDone.html
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.Number">
            <summary>
            Number of solutions to perform for Monte Carlo and time series simulations
            
            Original COM help: https://opendss.epri.com/Number1.html
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.Process_Time">
            <summary>
            Gets the time required to perform the latest solution (Read only)
            
            Original COM help: https://opendss.epri.com/Process_Time.html
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.Random">
            <summary>
            Randomization mode for random variables "Gaussian" or "Uniform"
            
            Original COM help: https://opendss.epri.com/Random.html
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.Seconds">
            <summary>
            Seconds from top of the hour.
            
            Original COM help: https://opendss.epri.com/Seconds.html
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.StepSize">
            <summary>
            Time step size in sec
            
            Original COM help: https://opendss.epri.com/StepSize.html
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.SystemYChanged">
            <summary>
            Flag that indicates if elements of the System Y have been changed by recent activity.
            
            Original COM help: https://opendss.epri.com/SystemYChanged.html
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.Time_of_Step">
            <summary>
            Get the solution process time + sample time for time step
            
            Original COM help: https://opendss.epri.com/Time_of_Step.html
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.Tolerance">
            <summary>
            Solution convergence tolerance.
            
            Original COM help: https://opendss.epri.com/Tolerance.html
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.Total_Time">
            <summary>
            Gets/sets the accumulated time of the simulation
            
            This accumulator has to be reset manually.
            
            Original COM help: https://opendss.epri.com/Total_Time.html
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.Totaliterations">
            <summary>
            Total iterations including control iterations for most recent solution.
            
            Original COM help: https://opendss.epri.com/Totaliterations.html
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.Year">
            <summary>
            Set year for planning studies
            
            Original COM help: https://opendss.epri.com/Year.html
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.dblHour">
            <summary>
            Hour as a double, including fractional part
            
            Original COM help: https://opendss.epri.com/dblHour1.html
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.pctGrowth">
            <summary>
            Percent default  annual load growth rate
            
            Original COM help: https://opendss.epri.com/pctGrowth.html
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.StepsizeHr">
            <summary>
            (write-only) Set Stepsize in Hr
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.StepsizeMin">
            <summary>
            (write-only) Set Stepsize in minutes
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.BusLevels">
            <summary>
            Bus levels for all the buses in the model. 
            
            The bus levels are calculated after calculating the incidence branch-to-node (B2N) 
            matrix and they represent the distance from the buses to a reference that goes from
            the feeder head to the farthest bus in the model. The bus level index matches with
            the bus list obtained with the circuit interface.
            
            Original COM help: https://opendss.epri.com/BusLevels.html
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.IncMatrix">
            <summary>
            Incidence branch-to-node (B2N) matrix calculated for the model as a vector of integers.
            
            The vector represents a sparse matrix (non-zero values are the only ones delivered) and
            can be interpreted as follows: The first element is the row number, the second one is
            the column and the third is the value, this way, by dividing the number of elements
            in the array by 3 the user can obtain the number of rows in case of wanting to sort 
            the vector values within a matrix.
            
            Original COM help: https://opendss.epri.com/IncMatrix.html
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.IncMatrixCols">
            <summary>
            Names of the columns of the branch-to-node (B2N) matrix.
            
            Original COM help: https://opendss.epri.com/IncMatrixCols.html
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.IncMatrixRows">
            <summary>
            Names of the rows of the branch-to-node (B2N) matrix.
            
            Original COM help: https://opendss.epri.com/IncMatrixRows.html
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.Laplacian">
            <summary>
            Laplacian matrix calculated in OpenDSS based on the latest branch-to-node (B2N) matrix.
            
            The vector represents a sparse matrix (non-zero values are the only ones delivered) and
            can be interpreted as follows: The first element is the row number, the second one is
            the column and the third is the value, this way, by dividing the number of elements
            in the array by 3 the user can obtain the number of rows in case of wanting to sort
            the vector values within a matrix. The tables for the columns and rows are the same
            as the columns for the B2N columns (square matrix).        
            
            Original COM help: https://opendss.epri.com/Laplacian.html
            </summary>
        </member>
        <member name="M:dss_sharp.Solution.SolveAll">
            <summary>
            Solves all the circuits (Actors) loaded into memory by the user.
            
            Original COM help: https://opendss.epri.com/SolveAll.html
            </summary>
        </member>
        <member name="P:dss_sharp.LineGeometries.AllNames">
            <summary>
            Array of strings with all LineGeometrie names in the circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.LineGeometries.Count">
            <summary>
            Number of LineGeometrie objects in active circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.LineGeometries.First">
            <summary>
            Sets the first LineGeometrie active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.LineGeometries.Name">
            <summary>
            Sets the active LineGeometrie by Name.
            </summary>
        </member>
        <member name="P:dss_sharp.LineGeometries.Next">
            <summary>
            Sets the next LineGeometrie active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.LineGeometries.idx">
            <summary>
            Get/set active LineGeometrie by index; index is 1-based: 1..count
            </summary>
        </member>
        <member name="P:dss_sharp.LineGeometries.Conductors">
            <summary>
            Array of strings with names of all conductors in the active LineGeometry object
            </summary>
        </member>
        <member name="P:dss_sharp.LineGeometries.EmergAmps">
            <summary>
            Emergency ampere rating
            </summary>
        </member>
        <member name="P:dss_sharp.LineGeometries.NormAmps">
            <summary>
            Normal ampere rating
            </summary>
        </member>
        <member name="P:dss_sharp.LineGeometries.Phases">
            <summary>
            Number of Phases
            </summary>
        </member>
        <member name="M:dss_sharp.LineGeometries.Rmatrix(System.Double,System.Double,System.Int32)">
            <summary>
            Resistance matrix, ohms
            </summary>
        </member>
        <member name="M:dss_sharp.LineGeometries.Xmatrix(System.Double,System.Double,System.Int32)">
            <summary>
            Reactance matrix, ohms
            </summary>
        </member>
        <member name="M:dss_sharp.LineGeometries.Zmatrix(System.Double,System.Double,System.Int32)">
            <summary>
            Complex impedance matrix, ohms
            </summary>
        </member>
        <member name="M:dss_sharp.LineGeometries.Cmatrix(System.Double,System.Double,System.Int32)">
            <summary>
            Capacitance matrix, nF
            </summary>
        </member>
        <member name="P:dss_sharp.LineGeometries.Xcoords">
            <summary>
            Get/Set the X (horizontal) coordinates of the conductors
            </summary>
        </member>
        <member name="P:dss_sharp.LineGeometries.Ycoords">
            <summary>
            Get/Set the Y (vertical/height) coordinates of the conductors
            </summary>
        </member>
        <member name="P:dss_sharp.LineGeometries.Nconds">
            <summary>
            Number of conductors in this geometry. Default is 3. Triggers memory allocations. Define first!
            </summary>
        </member>
        <member name="P:dss_sharp.LineSpacings.AllNames">
            <summary>
            Array of strings with all LineSpacing names in the circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.LineSpacings.Count">
            <summary>
            Number of LineSpacing objects in active circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.LineSpacings.First">
            <summary>
            Sets the first LineSpacing active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.LineSpacings.Name">
            <summary>
            Sets the active LineSpacing by Name.
            </summary>
        </member>
        <member name="P:dss_sharp.LineSpacings.Next">
            <summary>
            Sets the next LineSpacing active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.LineSpacings.idx">
            <summary>
            Get/set active LineSpacing by index; index is 1-based: 1..count
            </summary>
        </member>
        <member name="P:dss_sharp.LineSpacings.Phases">
            <summary>
            Number of Phases
            </summary>
        </member>
        <member name="P:dss_sharp.LineSpacings.Xcoords">
            <summary>
            Get/Set the X (horizontal) coordinates of the conductors
            </summary>
        </member>
        <member name="P:dss_sharp.LineSpacings.Ycoords">
            <summary>
            Get/Set the Y (vertical/height) coordinates of the conductors
            </summary>
        </member>
        <member name="P:dss_sharp.LoadShapes.AllNames">
            <summary>
            Array of strings with all LoadShape names in the circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.LoadShapes.Count">
            <summary>
            Number of LoadShape objects in active circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.LoadShapes.First">
            <summary>
            Sets the first LoadShape active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.LoadShapes.Name">
            <summary>
            Sets the active LoadShape by Name.
            </summary>
        </member>
        <member name="P:dss_sharp.LoadShapes.Next">
            <summary>
            Sets the next LoadShape active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.LoadShapes.idx">
            <summary>
            Get/set active LoadShape by index; index is 1-based: 1..count
            </summary>
        </member>
        <member name="M:dss_sharp.LoadShapes.New(System.String)">
            <summary>
            Create a new LoadShape, with default parameters
            </summary>
        </member>
        <member name="M:dss_sharp.LoadShapes.Normalize">
            <summary>
            Normalize the LoadShape data inplace
            </summary>
        </member>
        <member name="P:dss_sharp.LoadShapes.HrInterval">
            <summary>
            Fixed interval time value, in hours.
            
            Original COM help: https://opendss.epri.com/HrInterval.html
            </summary>
        </member>
        <member name="P:dss_sharp.LoadShapes.MinInterval">
            <summary>
            Fixed Interval time value, in minutes
            
            Original COM help: https://opendss.epri.com/MinInterval.html
            </summary>
        </member>
        <member name="P:dss_sharp.LoadShapes.Npts">
            <summary>
            Get/set Number of points in active Loadshape.
            
            Original COM help: https://opendss.epri.com/Npts.html
            </summary>
        </member>
        <member name="P:dss_sharp.LoadShapes.PBase">
            <summary>
            Base P value for normalization. Default is zero, meaning the peak will be used.
            
            Original COM help: https://opendss.epri.com/Pbase.html
            </summary>
        </member>
        <member name="P:dss_sharp.LoadShapes.Pmult">
            <summary>
            Array of doubles for the P multiplier in the Loadshape.
            
            Original COM help: https://opendss.epri.com/Pmult.html
            </summary>
        </member>
        <member name="P:dss_sharp.LoadShapes.QBase">
            <summary>
            Base for normalizing Q curve. If left at zero, the peak value is used.
            
            Original COM help: https://opendss.epri.com/Qbase.html
            </summary>
        </member>
        <member name="P:dss_sharp.LoadShapes.Qmult">
            <summary>
            Array of doubles containing the Q multipliers.
            
            Original COM help: https://opendss.epri.com/Qmult.html
            </summary>
        </member>
        <member name="P:dss_sharp.LoadShapes.TimeArray">
            <summary>
            Time array in hours corresponding to P and Q multipliers when the Interval=0.
            
            Original COM help: https://opendss.epri.com/TimeArray.html
            </summary>
        </member>
        <member name="P:dss_sharp.LoadShapes.UseActual">
            <summary>
            Boolean flag to let Loads know to use the actual value in the curve rather than use the value as a multiplier.
            
            Original COM help: https://opendss.epri.com/UseActual.html
            </summary>
        </member>
        <member name="P:dss_sharp.LoadShapes.sInterval">
            <summary>
            Fixed interval time value, in seconds.
            
            Original COM help: https://opendss.epri.com/Sinterval.html
            </summary>
        </member>
        <member name="M:dss_sharp.LoadShapes.UseFloat32">
            <summary>
            Converts the current LoadShape data to float32/single precision.
            If there is no data or the data is already represented using float32, nothing is done.
            
            **(API Extension)**
            </summary>
        </member>
        <member name="M:dss_sharp.LoadShapes.UseFloat64">
            <summary>
            Converts the current LoadShape data to float64/double precision.
            If there is no data or the data is already represented using float64, nothing is done.
            
            **(API Extension)**
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.AllNames">
            <summary>
            Array of strings with all Load names in the circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.Count">
            <summary>
            Number of Load objects in active circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.First">
            <summary>
            Sets the first Load active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.Name">
            <summary>
            Sets the active Load by Name.
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.Next">
            <summary>
            Sets the next Load active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.idx">
            <summary>
            Get/set active Load by index; index is 1-based: 1..count
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.AllocationFactor">
            <summary>
            Factor for allocating loads by connected xfkva
            
            Original COM help: https://opendss.epri.com/AllocationFactor.html
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.CVRcurve">
            <summary>
            Name of a loadshape with both Mult and Qmult, for CVR factors as a function of time.
            
            Original COM help: https://opendss.epri.com/CVRcurve.html
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.CVRvars">
            <summary>
            Percent reduction in Q for percent reduction in V. Must be used with dssLoadModelCVR.
            
            Original COM help: https://opendss.epri.com/CVRvars.html
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.CVRwatts">
            <summary>
            Percent reduction in P for percent reduction in V. Must be used with dssLoadModelCVR.
            
            Original COM help: https://opendss.epri.com/CVRwatts.html
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.Cfactor">
            <summary>
            Factor relates average to peak kw.  Used for allocation with kwh and kwhdays
            
            Original COM help: https://opendss.epri.com/Cfactor.html
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.Class">
            <summary>
            Code number used to separate loads by class or group. No effect on the solution.
            
            Original COM help: https://opendss.epri.com/Class.html
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.Growth">
            <summary>
            Name of the growthshape curve for yearly load growth factors.
            
            Original COM help: https://opendss.epri.com/Growth.html
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.IsDelta">
            <summary>
            Delta loads are connected line-to-line.
            
            Original COM help: https://opendss.epri.com/IsDelta1.html
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.Model">
            <summary>
            The Load Model defines variation of P and Q with voltage.
            
            Original COM help: https://opendss.epri.com/Model1.html
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.NumCust">
            <summary>
            Number of customers in this load, defaults to one.
            
            Original COM help: https://opendss.epri.com/NumCust1.html
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.PF">
            <summary>
            Get or set Power Factor for Active Load. Specify leading PF as negative. Updates kvar based on present value of kW
            
            Original COM help: https://opendss.epri.com/PF1.html
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.PctMean">
            <summary>
            Average percent of nominal load in Monte Carlo studies; only if no loadshape defined for this load.
            
            Original COM help: https://opendss.epri.com/PctMean.html
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.PctStdDev">
            <summary>
            Percent standard deviation for Monte Carlo load studies; if there is no loadshape assigned to this load.
            
            Original COM help: https://opendss.epri.com/PctStdDev.html
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.RelWeight">
            <summary>
            Relative Weighting factor for the active LOAD
            
            Original COM help: https://opendss.epri.com/RelWeight.html
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.Rneut">
            <summary>
            Neutral resistance for wye-connected loads.
            
            Original COM help: https://opendss.epri.com/Rneut.html
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.Spectrum">
            <summary>
            Name of harmonic current spectrum shape.
            
            Original COM help: https://opendss.epri.com/Spectrum.html
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.Status">
            <summary>
            Response to load multipliers: Fixed (growth only), Exempt (no LD curve), Variable (all).
            
            Original COM help: https://opendss.epri.com/Status.html
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.Vmaxpu">
            <summary>
            Maximum per-unit voltage to use the load model. Above this, constant Z applies.
            
            Original COM help: https://opendss.epri.com/Vmaxpu1.html
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.Vminemerg">
            <summary>
            Minimum voltage for unserved energy (UE) evaluation.
            
            Original COM help: https://opendss.epri.com/Vminemerg.html
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.Vminnorm">
            <summary>
            Minimum voltage for energy exceeding normal (EEN) evaluations.
            
            Original COM help: https://opendss.epri.com/Vminnorm.html
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.Vminpu">
            <summary>
            Minimum voltage to apply the load model. Below this, constant Z is used.
            
            Original COM help: https://opendss.epri.com/Vminpu1.html
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.Xneut">
            <summary>
            Neutral reactance for wye-connected loads.
            
            Original COM help: https://opendss.epri.com/Xneut.html
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.Yearly">
            <summary>
            Name of yearly duration loadshape
            
            Original COM help: https://opendss.epri.com/Yearly.html
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.ZIPV">
            <summary>
            Array of 7 doubles with values for ZIPV property of the load object
            
            Original COM help: https://opendss.epri.com/ZIPV.html
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.daily">
            <summary>
            Name of the loadshape for a daily load profile.
            
            Original COM help: https://opendss.epri.com/daily.html
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.duty">
            <summary>
            Name of the loadshape for a duty cycle simulation.
            
            Original COM help: https://opendss.epri.com/duty.html
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.kV">
            <summary>
            kV rating for active Load. For 2 or more phases set Line-Line kV. Else actual kV across terminals.
            
            Original COM help: https://opendss.epri.com/kV2.html
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.kW">
            <summary>
            Set kW for active Load. Updates kvar based on present PF.
            
            Original COM help: https://opendss.epri.com/kW1.html
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.kva">
            <summary>
            Base load kva. Also defined kw and kvar or pf input, or load allocation by kwh or xfkva.
            
            Original COM help: https://opendss.epri.com/kva.html
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.kvar">
            <summary>
            Reactive power in kvar for active Load. If set, updates PF based on present kW.
            
                    Original COM help: https://opendss.epri.com/kvar1.html
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.kwh">
            <summary>
            kWh billed for this period. Can be used with Cfactor for load allocation.
            
            Original COM help: https://opendss.epri.com/kwh.html
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.kwhdays">
            <summary>
            Length of kWh billing period for average demand calculation. Default 30.
            
            Original COM help: https://opendss.epri.com/kwhdays.html
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.pctSeriesRL">
            <summary>
            Percent of Load that is modeled as series R-L for harmonics studies
            
            Original COM help: https://opendss.epri.com/pctSeriesRL.html
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.xfkVA">
            <summary>
            Rated service transformer kVA for load allocation, using AllocationFactor. Affects kW, kvar, and pf.
            
            Original COM help: https://opendss.epri.com/xfkVA.html
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.Sensor">
            <summary>
            Name of the sensor monitoring this load.
            
            Original COM help: https://opendss.epri.com/Sensor.html
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.Phases">
            <summary>
            Number of phases
            
            **(API Extension)**
            </summary>
        </member>
        <member name="P:dss_sharp.Meters.ZonePCE">
            <summary>
            Returns the list of all PCE within the area covered by the energy meter
            </summary>
        </member>
        <member name="P:dss_sharp.Meters.AllNames">
            <summary>
            Array of strings with all Meter names in the circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.Meters.Count">
            <summary>
            Number of Meter objects in active circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.Meters.First">
            <summary>
            Sets the first Meter active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.Meters.Name">
            <summary>
            Sets the active Meter by Name.
            </summary>
        </member>
        <member name="P:dss_sharp.Meters.Next">
            <summary>
            Sets the next Meter active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.Meters.idx">
            <summary>
            Get/set active Meter by index; index is 1-based: 1..count
            </summary>
        </member>
        <member name="M:dss_sharp.Meters.CloseAllDIFiles">
            <summary>
            Close All Demand Interval Files. Users are required to close the DI files at the end of a run.
            
            Original COM help: https://opendss.epri.com/CloseAllDIFiles.html
            </summary>
        </member>
        <member name="M:dss_sharp.Meters.DoReliabilityCalc(System.Boolean)">
            <summary>
            Calculate reliability indices
            
            Original COM help: https://opendss.epri.com/DoReliabilityCalc.html
            </summary>
        </member>
        <member name="M:dss_sharp.Meters.OpenAllDIFiles">
            <summary>
            Open Demand Interval (DI) files
            
            Original COM help: https://opendss.epri.com/OpenAllDIFiles.html
            </summary>
        </member>
        <member name="M:dss_sharp.Meters.Reset">
            <summary>
            Resets registers of active meter.
            
            Original COM help: https://opendss.epri.com/Reset2.html
            </summary>
        </member>
        <member name="M:dss_sharp.Meters.ResetAll">
            <summary>
            Resets registers of all meter objects.
            
            Original COM help: https://opendss.epri.com/ResetAll.html
            </summary>
        </member>
        <member name="M:dss_sharp.Meters.Sample">
            <summary>
            Forces active Meter to take a sample.
            
            Original COM help: https://opendss.epri.com/Sample1.html
            </summary>
        </member>
        <member name="M:dss_sharp.Meters.SampleAll">
            <summary>
            Causes all EnergyMeter objects to take a sample at the present time.
            
            Original COM help: https://opendss.epri.com/SampleAll.html
            </summary>
        </member>
        <member name="M:dss_sharp.Meters.Save">
            <summary>
            Saves meter register values.
            
            Original COM help: https://opendss.epri.com/Save.html
            </summary>
        </member>
        <member name="M:dss_sharp.Meters.SaveAll">
            <summary>
            Save All EnergyMeter objects
            
            Original COM help: https://opendss.epri.com/SaveAll.html
            </summary>
        </member>
        <member name="P:dss_sharp.Meters.AllBranchesInZone">
            <summary>
            Wide string list of all branches in zone of the active EnergyMeter object.
            
            Original COM help: https://opendss.epri.com/AllBranchesInZone.html
            </summary>
        </member>
        <member name="P:dss_sharp.Meters.AllEndElements">
            <summary>
            Array of names of all zone end elements.
            
            Original COM help: https://opendss.epri.com/AllEndElements.html
            </summary>
        </member>
        <member name="P:dss_sharp.Meters.AllocFactors">
            <summary>
            Array of doubles: set the phase allocation factors for the active meter.
            
            Original COM help: https://opendss.epri.com/AllocFactors.html
            </summary>
        </member>
        <member name="P:dss_sharp.Meters.AvgRepairTime">
            <summary>
            Average Repair time in this section of the meter zone
            
            Original COM help: https://opendss.epri.com/AvgRepairTime.html
            </summary>
        </member>
        <member name="P:dss_sharp.Meters.CalcCurrent">
            <summary>
            Set the magnitude of the real part of the Calculated Current (normally determined by solution) for the Meter to force some behavior on Load Allocation
            
            Original COM help: https://opendss.epri.com/CalcCurrent.html
            </summary>
        </member>
        <member name="P:dss_sharp.Meters.CountBranches">
            <summary>
            Number of branches in Active EnergyMeter zone. (Same as sequence list size)
            
            Original COM help: https://opendss.epri.com/CountBranches.html
            </summary>
        </member>
        <member name="P:dss_sharp.Meters.CountEndElements">
            <summary>
            Number of zone end elements in the active meter zone.
            
            Original COM help: https://opendss.epri.com/CountEndElements.html
            </summary>
        </member>
        <member name="P:dss_sharp.Meters.CustInterrupts">
            <summary>
            Total customer interruptions for this Meter zone based on reliability calcs.
            
            Original COM help: https://opendss.epri.com/CustInterrupts.html
            </summary>
        </member>
        <member name="P:dss_sharp.Meters.DIFilesAreOpen">
            <summary>
            Global Flag in the DSS to indicate if Demand Interval (DI) files have been properly opened.
            
            Original COM help: https://opendss.epri.com/DIFilesAreOpen.html
            </summary>
        </member>
        <member name="P:dss_sharp.Meters.FaultRateXRepairHrs">
            <summary>
            Sum of Fault Rate time Repair Hrs in this section of the meter zone
            
            Original COM help: https://opendss.epri.com/FaultRateXRepairHrs.html
            </summary>
        </member>
        <member name="P:dss_sharp.Meters.MeteredElement">
            <summary>
            Name of metered element
            
            Original COM help: https://opendss.epri.com/MeteredElement.html
            </summary>
        </member>
        <member name="P:dss_sharp.Meters.MeteredTerminal">
            <summary>
            Number of Metered Terminal
            
            Original COM help: https://opendss.epri.com/MeteredTerminal.html
            </summary>
        </member>
        <member name="P:dss_sharp.Meters.NumSectionBranches">
            <summary>
            Number of branches (lines) in this section
            
            Original COM help: https://opendss.epri.com/NumSectionBranches.html
            </summary>
        </member>
        <member name="P:dss_sharp.Meters.NumSectionCustomers">
            <summary>
            Number of Customers in the active section.
            
            Original COM help: https://opendss.epri.com/NumSectionCustomers.html
            </summary>
        </member>
        <member name="P:dss_sharp.Meters.NumSections">
            <summary>
            Number of feeder sections in this meter's zone
            
            Original COM help: https://opendss.epri.com/NumSections.html
            </summary>
        </member>
        <member name="P:dss_sharp.Meters.OCPDeviceType">
            <summary>
            Type of OCP device. 1=Fuse; 2=Recloser; 3=Relay
            
            Original COM help: https://opendss.epri.com/OCPDeviceType.html
            </summary>
        </member>
        <member name="P:dss_sharp.Meters.Peakcurrent">
            <summary>
            Array of doubles to set values of Peak Current property
            
            Original COM help: https://opendss.epri.com/Peakcurrent.html
            </summary>
        </member>
        <member name="P:dss_sharp.Meters.RegisterNames">
            <summary>
            Array of strings containing the names of the registers.
            
            See also the enum `EnergyMeterRegisters` for the standard register names.
            Besides those listed in the enumeration, users may need to check `RegisterNames`
            in order to find a specific register index at runtime.
            
            Original COM help: https://opendss.epri.com/RegisterNames1.html
            </summary>
        </member>
        <member name="P:dss_sharp.Meters.RegisterValues">
            <summary>
            Array of all the values contained in the Meter registers for the active Meter.
            
            Original COM help: https://opendss.epri.com/RegisterValues1.html
            </summary>
        </member>
        <member name="P:dss_sharp.Meters.SAIDI">
            <summary>
            SAIDI for this meter's zone. Execute DoReliabilityCalc first.
            
            Original COM help: https://opendss.epri.com/SAIDI.html
            </summary>
        </member>
        <member name="P:dss_sharp.Meters.SAIFI">
            <summary>
            Returns SAIFI for this meter's Zone. Execute Reliability Calc method first.
            
            Original COM help: https://opendss.epri.com/SAIFI.html
            </summary>
        </member>
        <member name="P:dss_sharp.Meters.SAIFIKW">
            <summary>
            SAIFI based on kW rather than number of customers. Get after reliability calcs.
            
            Original COM help: https://opendss.epri.com/SAIFIKW.html
            </summary>
        </member>
        <member name="P:dss_sharp.Meters.SectSeqIdx">
            <summary>
            SequenceIndex of the branch at the head of this section
            
            Original COM help: https://opendss.epri.com/SectSeqIdx.html
            </summary>
        </member>
        <member name="P:dss_sharp.Meters.SectTotalCust">
            <summary>
            Total Customers downline from this section
            
            Original COM help: https://opendss.epri.com/SectTotalCust.html
            </summary>
        </member>
        <member name="P:dss_sharp.Meters.SeqListSize">
            <summary>
            Size of the Sequence List
            
            Original COM help: https://opendss.epri.com/SeqListSize.html
            </summary>
        </member>
        <member name="P:dss_sharp.Meters.SequenceIndex">
            <summary>
            Get/set Index into Meter's SequenceList that contains branch pointers in lexical order. 
            Earlier index guaranteed to be upline from later index. Sets PDelement active.
            
            Original COM help: https://opendss.epri.com/SequenceIndex.html
            </summary>
        </member>
        <member name="P:dss_sharp.Meters.SumBranchFltRates">
            <summary>
            Sum of the branch fault rates in this section of the meter's zone
            
            Original COM help: https://opendss.epri.com/SumBranchFltRates.html
            </summary>
        </member>
        <member name="P:dss_sharp.Meters.TotalCustomers">
            <summary>
            Total Number of customers in this zone (downline from the EnergyMeter)
            
            Original COM help: https://opendss.epri.com/TotalCustomers.html
            </summary>
        </member>
        <member name="P:dss_sharp.Meters.Totals">
            <summary>
            Totals of all registers of all meters
            
            Original COM help: https://opendss.epri.com/Totals.html
            </summary>
        </member>
        <member name="P:dss_sharp.PDElements.AccumulatedL">
            <summary>
            Accumulated failure rate for this branch on downline
            
            Original COM help: https://opendss.epri.com/AccumulatedL.html
            </summary>
        </member>
        <member name="P:dss_sharp.PDElements.Count">
            <summary>
            Number of PD elements (including disabled elements)
            
            Original COM help: https://opendss.epri.com/Count12.html
            </summary>
        </member>
        <member name="P:dss_sharp.PDElements.FaultRate">
            <summary>
            Get/Set Number of failures per year. 
            For LINE elements: Number of failures per unit length per year.
            </summary>
        </member>
        <member name="P:dss_sharp.PDElements.First">
            <summary>
            Set the first enabled PD element to be the active element.
            Returns 0 if none found.
            </summary>
        </member>
        <member name="P:dss_sharp.PDElements.FromTerminal">
            <summary>
            Number of the terminal of active PD element that is on the "from" 
            side. This is set after the meter zone is determined.
            </summary>
        </member>
        <member name="P:dss_sharp.PDElements.IsShunt">
            <summary>
            Boolean indicating of PD element should be treated as a shunt 
            element rather than a series element. Applies to Capacitor and Reactor 
            elements in particular.
            </summary>
        </member>
        <member name="P:dss_sharp.PDElements.Lambda">
            <summary>
            Failure rate for this branch. Faults per year including length of line.
            
            Original COM help: https://opendss.epri.com/Lambda1.html
            </summary>
        </member>
        <member name="P:dss_sharp.PDElements.Name">
            <summary>
            Get/Set name of active PD Element. Returns null string if active element 
            is not PDElement type.
            </summary>
        </member>
        <member name="P:dss_sharp.PDElements.Next">
            <summary>
            Advance to the next PD element in the circuit. Enabled elements 
            only. Returns 0 when no more elements.
            </summary>
        </member>
        <member name="P:dss_sharp.PDElements.Numcustomers">
            <summary>
            Number of customers, this branch
            
            Original COM help: https://opendss.epri.com/Numcustomers.html
            </summary>
        </member>
        <member name="P:dss_sharp.PDElements.ParentPDElement">
            <summary>
            Sets the parent PD element to be the active circuit element.
            Returns 0 if no more elements upline.
            </summary>
        </member>
        <member name="P:dss_sharp.PDElements.RepairTime">
            <summary>
            Average repair time for this element in hours
            
            Original COM help: https://opendss.epri.com/RepairTime.html
            </summary>
        </member>
        <member name="P:dss_sharp.PDElements.SectionID">
            <summary>
            Integer ID of the feeder section that this PDElement branch is part of
            
            Original COM help: https://opendss.epri.com/SectionID1.html
            </summary>
        </member>
        <member name="P:dss_sharp.PDElements.TotalMiles">
            <summary>
            Total miles of line from this element to the end of the zone. For recloser siting algorithm.
            
            Original COM help: https://opendss.epri.com/TotalMiles1.html
            </summary>
        </member>
        <member name="P:dss_sharp.PDElements.Totalcustomers">
            <summary>
            Total number of customers from this branch to the end of the zone
            
            Original COM help: https://opendss.epri.com/TotalCustomers1.html
            </summary>
        </member>
        <member name="P:dss_sharp.PDElements.pctPermanent">
            <summary>
            Get/Set percent of faults that are permanent (require repair). Otherwise, fault is assumed to be transient/temporary.
            
            Original COM help: https://opendss.epri.com/pctPermanent.html
            </summary>
        </member>
        <member name="P:dss_sharp.PDElements.AllNames">
            <summary>
            Array of strings consisting of all PD element names.
            
            **(API Extension)**
            </summary>
        </member>
        <member name="M:dss_sharp.PDElements.AllMaxCurrents(System.Boolean)">
            <summary>
            Array of doubles with the maximum current across the conductors, for each PD 
            element.
            
            By default, only the *first terminal* is used for the maximum current, matching
            the behavior of the "export capacity" command. Pass `true` to 
            force the analysis to all terminals.
            
            See also: 
            https://sourceforge.net/p/electricdss/discussion/beginners/thread/da5b93ca/
            
            **(API Extension)**
            </summary>
        </member>
        <member name="M:dss_sharp.PDElements.AllPctNorm(System.Boolean)">
            <summary>
            Array of doubles with the maximum current across the conductors as a percentage 
            of the Normal Ampere Rating, for each PD element.
            
            By default, only the *first terminal* is used for the maximum current, matching
            the behavior of the "export capacity" command. Pass `true` to 
            force the analysis to all terminals.
            
            See also: 
            https://sourceforge.net/p/electricdss/discussion/beginners/thread/da5b93ca/
            
            **(API Extension)**
            </summary>
        </member>
        <member name="M:dss_sharp.PDElements.AllPctEmerg(System.Boolean)">
            <summary>
            Array of doubles with the maximum current across the conductors as a percentage
            of the Emergency Ampere Rating, for each PD element.
            
            By default, only the *first terminal* is used for the maximum current, matching
            the behavior of the "export capacity" command. Pass `true` to 
            force the analysis to all terminals.
            
            See also: 
            https://sourceforge.net/p/electricdss/discussion/beginners/thread/da5b93ca/
            
            **(API Extension)**
            </summary>
        </member>
        <member name="P:dss_sharp.PDElements.AllCurrents">
            <summary>
            Complex array of currents for all conductors, all terminals, for each PD element.
            
            **(API Extension)**
            </summary>
        </member>
        <member name="P:dss_sharp.PDElements.AllCurrentsMagAng">
            <summary>
            Complex array (magnitude and angle format) of currents for all conductors, all terminals, for each PD element.
            
            **(API Extension)**
            </summary>
        </member>
        <member name="P:dss_sharp.PDElements.AllCplxSeqCurrents">
            <summary>
            Complex double array of Sequence Currents for all conductors of all terminals, for each PD elements.
            
            **(API Extension)**
            </summary>
        </member>
        <member name="P:dss_sharp.PDElements.AllSeqCurrents">
            <summary>
            Double array of the symmetrical component currents (magnitudes only) into each 3-phase terminal, for each PD element.
            
            **(API Extension)**
            </summary>
        </member>
        <member name="P:dss_sharp.PDElements.AllPowers">
            <summary>
            Complex array of powers into each conductor of each terminal, for each PD element.
            
            **(API Extension)**
            </summary>
        </member>
        <member name="P:dss_sharp.PDElements.AllSeqPowers">
            <summary>
            Complex array of sequence powers into each 3-phase terminal, for each PD element
            
            **(API Extension)**
            </summary>
        </member>
        <member name="P:dss_sharp.PDElements.AllNumPhases">
            <summary>
            Integer array listing the number of phases of all PD elements
            
            **(API Extension)**
            </summary>
        </member>
        <member name="P:dss_sharp.PDElements.AllNumConductors">
            <summary>
            Integer array listing the number of conductors of all PD elements
            
            **(API Extension)**
            </summary>
        </member>
        <member name="P:dss_sharp.PDElements.AllNumTerminals">
            <summary>
            Integer array listing the number of terminals of all PD elements
            
            **(API Extension)**
            </summary>
        </member>
        <member name="P:dss_sharp.PVSystems.AllNames">
            <summary>
            Array of strings with all PVSystem names in the circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.PVSystems.Count">
            <summary>
            Number of PVSystem objects in active circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.PVSystems.First">
            <summary>
            Sets the first PVSystem active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.PVSystems.Name">
            <summary>
            Sets the active PVSystem by Name.
            </summary>
        </member>
        <member name="P:dss_sharp.PVSystems.Next">
            <summary>
            Sets the next PVSystem active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.PVSystems.idx">
            <summary>
            Get/set active PVSystem by index; index is 1-based: 1..count
            </summary>
        </member>
        <member name="P:dss_sharp.PVSystems.Irradiance">
            <summary>
            Get/set the present value of the Irradiance property in kW/m²
            
            Original COM help: https://opendss.epri.com/Irradiance.html
            </summary>
        </member>
        <member name="P:dss_sharp.PVSystems.PF">
            <summary>
            Get/set the power factor for the active PVSystem
            
            Original COM help: https://opendss.epri.com/PF2.html
            </summary>
        </member>
        <member name="P:dss_sharp.PVSystems.RegisterNames">
            <summary>
            Array of PVSystem energy meter register names
            
            See also the enum `GeneratorRegisters`.
            
            Original COM help: https://opendss.epri.com/RegisterNames2.html
            </summary>
        </member>
        <member name="P:dss_sharp.PVSystems.RegisterValues">
            <summary>
            Array of doubles containing values in PVSystem registers.
            
            Original COM help: https://opendss.epri.com/RegisterValues2.html
            </summary>
        </member>
        <member name="P:dss_sharp.PVSystems.kVArated">
            <summary>
            Get/set Rated kVA of the PVSystem
            
            Original COM help: https://opendss.epri.com/kVArated1.html
            </summary>
        </member>
        <member name="P:dss_sharp.PVSystems.kW">
            <summary>
            Get kW output
            
            Original COM help: https://opendss.epri.com/kW2.html
            </summary>
        </member>
        <member name="P:dss_sharp.PVSystems.kvar">
            <summary>
            Get/set kvar output value
            
            Original COM help: https://opendss.epri.com/kvar2.html
            </summary>
        </member>
        <member name="P:dss_sharp.PVSystems.daily">
            <summary>
            Name of the dispatch shape to use for daily simulations. Must be previously
            defined as a Loadshape object of 24 hrs, typically. In the default dispatch
            mode, the PVSystem element uses this loadshape to trigger State changes.
            
            **(API Extension)**
            </summary>
        </member>
        <member name="P:dss_sharp.PVSystems.duty">
            <summary>
            Name of the load shape to use for duty cycle dispatch simulations such as
            for solar ramp rate studies. Must be previously defined as a Loadshape
            object. Typically would have time intervals of 1-5 seconds.
            
            **(API Extension)**
            </summary>
        </member>
        <member name="P:dss_sharp.PVSystems.yearly">
            <summary>
            Dispatch shape to use for yearly simulations. Must be previously defined
            as a Loadshape object. If this is not specified, the Daily dispatch shape,
            if any, is repeated during Yearly solution modes. In the default dispatch
            mode, the PVSystem element uses this loadshape to trigger State changes.
            
            **(API Extension)**
            </summary>
        </member>
        <member name="P:dss_sharp.PVSystems.Tdaily">
            <summary>
            Temperature shape to use for daily simulations. Must be previously defined
            as a TShape object of 24 hrs, typically. The PVSystem element uses this
            TShape to determine the Pmpp from the Pmpp vs T curve. Units must agree
            with the Pmpp vs T curve.
            
            **(API Extension)**
            </summary>
        </member>
        <member name="P:dss_sharp.PVSystems.Tduty">
            <summary>
            Temperature shape to use for duty cycle dispatch simulations such as for
            solar ramp rate studies. Must be previously defined as a TShape object.
            Typically would have time intervals of 1-5 seconds. Designate the number
            of points to solve using the Set Number=xxxx command. If there are fewer
            points in the actual shape, the shape is assumed to repeat. The PVSystem
            model uses this TShape to determine the Pmpp from the Pmpp vs T curve.
            Units must agree with the Pmpp vs T curve.
            
            **(API Extension)**
            </summary>
        </member>
        <member name="P:dss_sharp.PVSystems.Tyearly">
            <summary>
            Temperature shape to use for yearly simulations. Must be previously defined
            as a TShape object. If this is not specified, the Daily dispatch shape, if
            any, is repeated during Yearly solution modes. The PVSystem element uses
            this TShape to determine the Pmpp from the Pmpp vs T curve. Units must
            agree with the Pmpp vs T curve.
            
            **(API Extension)**
            </summary>
        </member>
        <member name="P:dss_sharp.PVSystems.IrradianceNow">
            <summary>
            Returns the current irradiance value for the active PVSystem. Use it to 
            know what's the current irradiance value for the PV during a simulation.
            
            Original COM help: https://opendss.epri.com/IrradianceNow.html
            </summary>
        </member>
        <member name="P:dss_sharp.PVSystems.Pmpp">
            <summary>
            Gets/sets the rated max power of the PV array for 1.0 kW/m² irradiance 
            and a user-selected array temperature of the active PVSystem.
            
            Original COM help: https://opendss.epri.com/Pmpp.html
            </summary>
        </member>
        <member name="P:dss_sharp.PVSystems.Sensor">
            <summary>
            Name of the sensor monitoring this element.
            
            Original COM help: https://opendss.epri.com/Sensor1.html
            </summary>
        </member>
        <member name="P:dss_sharp.Reactors.AllNames">
            <summary>
            Array of strings with all Reactor names in the circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.Reactors.Count">
            <summary>
            Number of Reactor objects in active circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.Reactors.First">
            <summary>
            Sets the first Reactor active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.Reactors.Name">
            <summary>
            Sets the active Reactor by Name.
            </summary>
        </member>
        <member name="P:dss_sharp.Reactors.Next">
            <summary>
            Sets the next Reactor active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.Reactors.idx">
            <summary>
            Get/set active Reactor by index; index is 1-based: 1..count
            </summary>
        </member>
        <member name="P:dss_sharp.Reactors.SpecType">
            <summary>
            How the reactor data was provided: 1=kvar, 2=R+jX, 3=R and X matrices, 4=sym components.
            Depending on this value, only some properties are filled or make sense in the context.
            </summary>
        </member>
        <member name="P:dss_sharp.Reactors.IsDelta">
            <summary>
            Delta connection or wye?
            </summary>
        </member>
        <member name="P:dss_sharp.Reactors.Parallel">
            <summary>
            Indicates whether Rmatrix and Xmatrix are to be considered in parallel.
            </summary>
        </member>
        <member name="P:dss_sharp.Reactors.LmH">
            <summary>
            Inductance, mH. Alternate way to define the reactance, X, property.
            </summary>
        </member>
        <member name="P:dss_sharp.Reactors.kV">
            <summary>
            For 2, 3-phase, kV phase-phase. Otherwise specify actual coil rating.
            </summary>
        </member>
        <member name="P:dss_sharp.Reactors.kvar">
            <summary>
            Total kvar, all phases.  Evenly divided among phases. Only determines X. Specify R separately
            </summary>
        </member>
        <member name="P:dss_sharp.Reactors.Phases">
            <summary>
            Number of phases.
            </summary>
        </member>
        <member name="P:dss_sharp.Reactors.Bus1">
            <summary>
            Name of first bus.
            Bus2 property will default to this bus, node 0, unless previously specified.
            Only Bus1 need be specified for a Yg shunt reactor.
            </summary>
        </member>
        <member name="P:dss_sharp.Reactors.Bus2">
            <summary>
            Name of 2nd bus. Defaults to all phases connected to first bus, node 0, (Shunt Wye Connection) except when Bus2 is specifically defined.
            Not necessary to specify for delta (LL) connection
            </summary>
        </member>
        <member name="P:dss_sharp.Reactors.LCurve">
            <summary>
            Name of XYCurve object, previously defined, describing per-unit variation of phase inductance, L=X/w, vs. frequency. Applies to reactance specified by X, LmH, Z, or kvar property. L generally decreases somewhat with frequency above the base frequency, approaching a limit at a few kHz.
            </summary>
        </member>
        <member name="P:dss_sharp.Reactors.RCurve">
            <summary>
            Name of XYCurve object, previously defined, describing per-unit variation of phase resistance, R, vs. frequency. Applies to resistance specified by R or Z property. If actual values are not known, R often increases by approximately the square root of frequency.
            </summary>
        </member>
        <member name="P:dss_sharp.Reactors.R">
            <summary>
            Resistance (in series with reactance), each phase, ohms. This property applies to REACTOR specified by either kvar or X. See also help on Z.
            </summary>
        </member>
        <member name="P:dss_sharp.Reactors.X">
            <summary>
            Reactance, each phase, ohms at base frequency. See also help on Z and LmH properties.
            </summary>
        </member>
        <member name="P:dss_sharp.Reactors.Rp">
            <summary>
            Resistance in parallel with R and X (the entire branch). Assumed infinite if not specified.
            </summary>
        </member>
        <member name="P:dss_sharp.Reactors.Rmatrix">
            <summary>
            Resistance matrix, ohms at base frequency. Order of the matrix is the number of phases. Mutually exclusive to specifying parameters by kvar or X.
            </summary>
        </member>
        <member name="P:dss_sharp.Reactors.Xmatrix">
            <summary>
            Reactance matrix, ohms at base frequency. Order of the matrix is the number of phases. Mutually exclusive to specifying parameters by kvar or X.
            </summary>
        </member>
        <member name="P:dss_sharp.Reactors.Z">
            <summary>
            Alternative way of defining R and X properties. Enter a 2-element array representing R +jX in ohms.
            </summary>
        </member>
        <member name="P:dss_sharp.Reactors.Z1">
            <summary>
            Positive-sequence impedance, ohms, as a 2-element array representing a complex number.
            
            If defined, Z1, Z2, and Z0 are used to define the impedance matrix of the REACTOR.
            
            Z1 MUST BE DEFINED TO USE THIS OPTION FOR DEFINING THE MATRIX.
            
            Side Effect: Sets Z2 and Z0 to same values unless they were previously defined.
            </summary>
        </member>
        <member name="P:dss_sharp.Reactors.Z2">
            <summary>
            Negative-sequence impedance, ohms, as a 2-element array representing a complex number.
            
            Used to define the impedance matrix of the REACTOR if Z1 is also specified.
            
            Note: Z2 defaults to Z1 if it is not specifically defined. If Z2 is not equal to Z1, the impedance matrix is asymmetrical.
            </summary>
        </member>
        <member name="P:dss_sharp.Reactors.Z0">
            <summary>
            Zero-sequence impedance, ohms, as a 2-element array representing a complex number.
            
            Used to define the impedance matrix of the REACTOR if Z1 is also specified.
            
            Note: Z0 defaults to Z1 if it is not specifically defined.
            </summary>
        </member>
        <member name="P:dss_sharp.Reclosers.AllNames">
            <summary>
            Array of strings with all Recloser names in the circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.Reclosers.Count">
            <summary>
            Number of Recloser objects in active circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.Reclosers.First">
            <summary>
            Sets the first Recloser active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.Reclosers.Name">
            <summary>
            Sets the active Recloser by Name.
            </summary>
        </member>
        <member name="P:dss_sharp.Reclosers.Next">
            <summary>
            Sets the next Recloser active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.Reclosers.idx">
            <summary>
            Get/set active Recloser by index; index is 1-based: 1..count
            </summary>
        </member>
        <member name="P:dss_sharp.Reclosers.GroundInst">
            <summary>
            Ground (3I0) instantaneous trip setting - curve multiplier or actual amps.
            
            Original COM help: https://opendss.epri.com/GroundInst.html
            </summary>
        </member>
        <member name="P:dss_sharp.Reclosers.GroundTrip">
            <summary>
            Ground (3I0) trip multiplier or actual amps
            
            Original COM help: https://opendss.epri.com/GroundTrip.html
            </summary>
        </member>
        <member name="P:dss_sharp.Reclosers.MonitoredObj">
            <summary>
            Full name of object this Recloser to be monitored.
            
            Original COM help: https://opendss.epri.com/MonitoredObj2.html
            </summary>
        </member>
        <member name="P:dss_sharp.Reclosers.MonitoredTerm">
            <summary>
            Terminal number of Monitored object for the Recloser 
            
            Original COM help: https://opendss.epri.com/MonitoredTerm2.html
            </summary>
        </member>
        <member name="P:dss_sharp.Reclosers.NumFast">
            <summary>
            Number of fast shots
            
            Original COM help: https://opendss.epri.com/NumFast.html
            </summary>
        </member>
        <member name="P:dss_sharp.Reclosers.PhaseInst">
            <summary>
            Phase instantaneous curve multiplier or actual amps
            
            Original COM help: https://opendss.epri.com/PhaseInst.html
            </summary>
        </member>
        <member name="P:dss_sharp.Reclosers.PhaseTrip">
            <summary>
            Phase trip curve multiplier or actual amps
            
            Original COM help: https://opendss.epri.com/PhaseTrip.html
            </summary>
        </member>
        <member name="P:dss_sharp.Reclosers.RecloseIntervals">
            <summary>
            Array of Doubles: reclose intervals, s, between shots.
            
            Original COM help: https://opendss.epri.com/RecloseIntervals.html
            </summary>
        </member>
        <member name="P:dss_sharp.Reclosers.Shots">
            <summary>
            Number of shots to lockout (fast + delayed)
            
            Original COM help: https://opendss.epri.com/Shots.html
            </summary>
        </member>
        <member name="P:dss_sharp.Reclosers.SwitchedObj">
            <summary>
            Full name of the circuit element that is being switched by the Recloser.
            
            Original COM help: https://opendss.epri.com/SwitchedObj1.html
            </summary>
        </member>
        <member name="P:dss_sharp.Reclosers.SwitchedTerm">
            <summary>
            Terminal number of the controlled device being switched by the Recloser
            
            Original COM help: https://opendss.epri.com/SwitchedTerm1.html
            </summary>
        </member>
        <member name="M:dss_sharp.Reclosers.Reset">
            <summary>
            Reset recloser to normal state. 
            If open, lock out the recloser. 
            If closed, resets recloser to first operation.
            </summary>
        </member>
        <member name="P:dss_sharp.Reclosers.State">
            <summary>
            Get/Set present state of recloser. 
            If set to open (ActionCodes.Open=1), open recloser's controlled element and lock out the recloser. 
            If set to close (ActionCodes.Close=2), close recloser's controlled element and resets recloser to first operation.
            </summary>
        </member>
        <member name="P:dss_sharp.Reclosers.NormalState">
            <summary>
            Get/set normal state (ActionCodes.Open=1, ActionCodes.Close=2) of the recloser.
            
            Original COM help: https://opendss.epri.com/NormalState1.html
            </summary>
        </member>
        <member name="P:dss_sharp.RegControls.AllNames">
            <summary>
            Array of strings with all RegControl names in the circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.RegControls.Count">
            <summary>
            Number of RegControl objects in active circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.RegControls.First">
            <summary>
            Sets the first RegControl active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.RegControls.Name">
            <summary>
            Sets the active RegControl by Name.
            </summary>
        </member>
        <member name="P:dss_sharp.RegControls.Next">
            <summary>
            Sets the next RegControl active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.RegControls.idx">
            <summary>
            Get/set active RegControl by index; index is 1-based: 1..count
            </summary>
        </member>
        <member name="P:dss_sharp.RegControls.CTPrimary">
            <summary>
            CT primary ampere rating (secondary is 0.2 amperes)
            
            Original COM help: https://opendss.epri.com/CTPrimary.html
            </summary>
        </member>
        <member name="P:dss_sharp.RegControls.Delay">
            <summary>
            Time delay [s] after arming before the first tap change. Control may reset before actually changing taps.
            
            Original COM help: https://opendss.epri.com/Delay2.html
            </summary>
        </member>
        <member name="P:dss_sharp.RegControls.ForwardBand">
            <summary>
            Regulation bandwidth in forward direction, centered on Vreg
            
            Original COM help: https://opendss.epri.com/ForwardBand.html
            </summary>
        </member>
        <member name="P:dss_sharp.RegControls.ForwardR">
            <summary>
            LDC R setting in Volts
            
            Original COM help: https://opendss.epri.com/ForwardR.html
            </summary>
        </member>
        <member name="P:dss_sharp.RegControls.ForwardVreg">
            <summary>
            Target voltage in the forward direction, on PT secondary base.
            
            Original COM help: https://opendss.epri.com/ForwardVreg.html
            </summary>
        </member>
        <member name="P:dss_sharp.RegControls.ForwardX">
            <summary>
            LDC X setting in Volts
            
            Original COM help: https://opendss.epri.com/ForwardX.html
            </summary>
        </member>
        <member name="P:dss_sharp.RegControls.IsInverseTime">
            <summary>
            Time delay is inversely adjusted, proportional to the amount of voltage outside the regulating band.
            
            Original COM help: https://opendss.epri.com/IsInverseTime.html
            </summary>
        </member>
        <member name="P:dss_sharp.RegControls.IsReversible">
            <summary>
            Regulator can use different settings in the reverse direction.  Usually not applicable to substation transformers.
            
            Original COM help: https://opendss.epri.com/IsReversible.html
            </summary>
        </member>
        <member name="P:dss_sharp.RegControls.MaxTapChange">
            <summary>
            Maximum tap change per iteration in STATIC solution mode. 1 is more realistic, 16 is the default for a faster solution.
            
            Original COM help: https://opendss.epri.com/MaxTapChange.html
            </summary>
        </member>
        <member name="P:dss_sharp.RegControls.MonitoredBus">
            <summary>
            Name of a remote regulated bus, in lieu of LDC settings
            
            Original COM help: https://opendss.epri.com/MonitoredBus.html
            </summary>
        </member>
        <member name="P:dss_sharp.RegControls.PTratio">
            <summary>
            PT ratio for voltage control settings
            
            Original COM help: https://opendss.epri.com/PTratio1.html
            </summary>
        </member>
        <member name="P:dss_sharp.RegControls.ReverseBand">
            <summary>
            Bandwidth in reverse direction, centered on reverse Vreg.
            
            Original COM help: https://opendss.epri.com/ReverseBand.html
            </summary>
        </member>
        <member name="P:dss_sharp.RegControls.ReverseR">
            <summary>
            Reverse LDC R setting in Volts.
            
            Original COM help: https://opendss.epri.com/ReverseR.html
            </summary>
        </member>
        <member name="P:dss_sharp.RegControls.ReverseVreg">
            <summary>
            Target voltage in the revese direction, on PT secondary base.
            
            Original COM help: https://opendss.epri.com/ReverseVreg.html
            </summary>
        </member>
        <member name="P:dss_sharp.RegControls.ReverseX">
            <summary>
            Reverse LDC X setting in volts.
            
            Original COM help: https://opendss.epri.com/ReverseX.html
            </summary>
        </member>
        <member name="P:dss_sharp.RegControls.TapDelay">
            <summary>
            Time delay [s] for subsequent tap changes in a set. Control may reset before actually changing taps.
            
            Original COM help: https://opendss.epri.com/TapDelay.html
            </summary>
        </member>
        <member name="P:dss_sharp.RegControls.TapNumber">
            <summary>
            Integer number of the tap that the controlled transformer winding is currently on.
            
            Original COM help: https://opendss.epri.com/TapNumber.html
            </summary>
        </member>
        <member name="P:dss_sharp.RegControls.TapWinding">
            <summary>
            Tapped winding number
            
            Original COM help: https://opendss.epri.com/TapWinding.html
            </summary>
        </member>
        <member name="P:dss_sharp.RegControls.Transformer">
            <summary>
            Name of the transformer this regulator controls
            
            Original COM help: https://opendss.epri.com/Transformer.html
            </summary>
        </member>
        <member name="P:dss_sharp.RegControls.VoltageLimit">
            <summary>
            First house voltage limit on PT secondary base.  Setting to 0 disables this function.
            
            Original COM help: https://opendss.epri.com/VoltageLimit.html
            </summary>
        </member>
        <member name="P:dss_sharp.RegControls.Winding">
            <summary>
            Winding number for PT and CT connections
            
            Original COM help: https://opendss.epri.com/Winding.html
            </summary>
        </member>
        <member name="P:dss_sharp.Relays.AllNames">
            <summary>
            Array of strings with all Relay names in the circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.Relays.Count">
            <summary>
            Number of Relay objects in active circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.Relays.First">
            <summary>
            Sets the first Relay active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.Relays.Name">
            <summary>
            Sets the active Relay by Name.
            </summary>
        </member>
        <member name="P:dss_sharp.Relays.Next">
            <summary>
            Sets the next Relay active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.Relays.idx">
            <summary>
            Get/set active Relay by index; index is 1-based: 1..count
            </summary>
        </member>
        <member name="P:dss_sharp.Relays.MonitoredObj">
            <summary>
            Full name of object this Relay is monitoring.
            
            Original COM help: https://opendss.epri.com/MonitoredObj3.html
            </summary>
        </member>
        <member name="P:dss_sharp.Relays.MonitoredTerm">
            <summary>
            Number of terminal of monitored element that this Relay is monitoring.
            
            Original COM help: https://opendss.epri.com/MonitoredTerm3.html
            </summary>
        </member>
        <member name="P:dss_sharp.Relays.SwitchedObj">
            <summary>
            Full name of element that will be switched when relay trips.
            
            Original COM help: https://opendss.epri.com/SwitchedObj2.html
            </summary>
        </member>
        <member name="P:dss_sharp.Relays.SwitchedTerm">
            <summary>
            Terminal number of the switched object that will be opened when the relay trips.
            
            Original COM help: https://opendss.epri.com/SwitchedTerm2.html
            </summary>
        </member>
        <member name="M:dss_sharp.Relays.Open">
            <summary>
            Open relay's controlled element and lock out the relay.
            
            Original COM help: https://opendss.epri.com/Open4.html
            </summary>
        </member>
        <member name="M:dss_sharp.Relays.Close">
            <summary>
            Close the switched object controlled by the relay. Resets relay to first operation.
            
            Original COM help: https://opendss.epri.com/Close5.html
            </summary>
        </member>
        <member name="M:dss_sharp.Relays.Reset">
            <summary>
            Reset relay to normal state. 
            If open, lock out the relay. 
            If closed, resets relay to first operation.
            </summary>
        </member>
        <member name="P:dss_sharp.Relays.State">
            <summary>
            Get/Set present state of relay. 
            If set to open, open relay's controlled element and lock out the relay. 
            If set to close, close relay's controlled element and resets relay to first operation.
            </summary>
        </member>
        <member name="P:dss_sharp.Relays.NormalState">
            <summary>
            Normal state of relay.
            
            Original COM help: https://opendss.epri.com/NormalState3.html
            </summary>
        </member>
        <member name="P:dss_sharp.Sensors.AllNames">
            <summary>
            Array of strings with all Sensor names in the circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.Sensors.Count">
            <summary>
            Number of Sensor objects in active circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.Sensors.First">
            <summary>
            Sets the first Sensor active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.Sensors.Name">
            <summary>
            Sets the active Sensor by Name.
            </summary>
        </member>
        <member name="P:dss_sharp.Sensors.Next">
            <summary>
            Sets the next Sensor active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.Sensors.idx">
            <summary>
            Get/set active Sensor by index; index is 1-based: 1..count
            </summary>
        </member>
        <member name="P:dss_sharp.Sensors.Currents">
            <summary>
            Array of doubles for the line current measurements; don't use with kWS and kVARS.
            
            Original COM help: https://opendss.epri.com/Currents2.html
            </summary>
        </member>
        <member name="P:dss_sharp.Sensors.IsDelta">
            <summary>
            True if measured voltages are line-line. Currents are always line currents.
            
            Original COM help: https://opendss.epri.com/IsDelta2.html
            </summary>
        </member>
        <member name="P:dss_sharp.Sensors.MeteredElement">
            <summary>
            Full Name of the measured element
            
            Original COM help: https://opendss.epri.com/MeteredElement1.html
            </summary>
        </member>
        <member name="P:dss_sharp.Sensors.MeteredTerminal">
            <summary>
            Number of the measured terminal in the measured element.
            
            Original COM help: https://opendss.epri.com/MeteredTerminal1.html
            </summary>
        </member>
        <member name="P:dss_sharp.Sensors.PctError">
            <summary>
            Assumed percent error in the Sensor measurement. Default is 1.
            
            Original COM help: https://opendss.epri.com/PctError.html
            </summary>
        </member>
        <member name="P:dss_sharp.Sensors.ReverseDelta">
            <summary>
            True if voltage measurements are 1-3, 3-2, 2-1.
            
            Original COM help: https://opendss.epri.com/ReverseDelta.html
            </summary>
        </member>
        <member name="P:dss_sharp.Sensors.Weight">
            <summary>
            Weighting factor for this Sensor measurement with respect to other Sensors. Default is 1.
            
            Original COM help: https://opendss.epri.com/Weight.html
            </summary>
        </member>
        <member name="P:dss_sharp.Sensors.kVARS">
            <summary>
            Array of doubles for Q measurements. Overwrites Currents with a new estimate using kWS.
            
            Original COM help: https://opendss.epri.com/kVARS.html
            </summary>
        </member>
        <member name="P:dss_sharp.Sensors.kVS">
            <summary>
            Array of doubles for the LL or LN (depending on Delta connection) voltage measurements.
            
            Original COM help: https://opendss.epri.com/kVS.html
            </summary>
        </member>
        <member name="P:dss_sharp.Sensors.kVbase">
            <summary>
            Voltage base for the sensor measurements. LL for 2 and 3-phase sensors, LN for 1-phase sensors.
            
            Original COM help: https://opendss.epri.com/kVBase1.html
            </summary>
        </member>
        <member name="P:dss_sharp.Sensors.kWS">
            <summary>
            Array of doubles for P measurements. Overwrites Currents with a new estimate using kVARS.
            
            Original COM help: https://opendss.epri.com/kWS.html
            </summary>
        </member>
        <member name="P:dss_sharp.Sensors.AllocationFactor">
            <summary>
            Array of doubles for the allocation factors for each phase.
            
            Original COM help: https://opendss.epri.com/AllocationFactor1.html
            </summary>
        </member>
        <member name="P:dss_sharp.SwtControls.AllNames">
            <summary>
            Array of strings with all SwtControl names in the circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.SwtControls.Count">
            <summary>
            Number of SwtControl objects in active circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.SwtControls.First">
            <summary>
            Sets the first SwtControl active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.SwtControls.Name">
            <summary>
            Sets the active SwtControl by Name.
            </summary>
        </member>
        <member name="P:dss_sharp.SwtControls.Next">
            <summary>
            Sets the next SwtControl active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.SwtControls.idx">
            <summary>
            Get/set active SwtControl by index; index is 1-based: 1..count
            </summary>
        </member>
        <member name="P:dss_sharp.SwtControls.Action">
            <summary>
            Open or Close the switch. No effect if switch is locked.  However, Reset removes any lock and then closes the switch (shelf state).
            
            Original COM help: https://opendss.epri.com/Action1.html
            </summary>
        </member>
        <member name="P:dss_sharp.SwtControls.Delay">
            <summary>
            Time delay [s] between arming and opening or closing the switch.  Control may reset before actually operating the switch.
            
            Original COM help: https://opendss.epri.com/Delay3.html
            </summary>
        </member>
        <member name="P:dss_sharp.SwtControls.IsLocked">
            <summary>
            The lock prevents both manual and automatic switch operation.
            
            Original COM help: https://opendss.epri.com/IsLocked.html
            </summary>
        </member>
        <member name="P:dss_sharp.SwtControls.NormalState">
            <summary>
            Get/set Normal state of switch (see ActionCodes) dssActionOpen or dssActionClose
            </summary>
        </member>
        <member name="P:dss_sharp.SwtControls.State">
            <summary>
            Set it to force the switch to a specified state, otherwise read its present state.
            
            Original COM help: https://opendss.epri.com/State.html
            </summary>
        </member>
        <member name="P:dss_sharp.SwtControls.SwitchedObj">
            <summary>
            Full name of the switched element.
            
            Original COM help: https://opendss.epri.com/SwitchedObj3.html
            </summary>
        </member>
        <member name="P:dss_sharp.SwtControls.SwitchedTerm">
            <summary>
            Terminal number where the switch is located on the SwitchedObj
            
            Original COM help: https://opendss.epri.com/SwitchedTerm3.html
            </summary>
        </member>
        <member name="P:dss_sharp.TSData.AllNames">
            <summary>
            Array of strings with all TSData names in the circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.TSData.Count">
            <summary>
            Number of TSData objects in active circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.TSData.First">
            <summary>
            Sets the first TSData active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.TSData.Name">
            <summary>
            Sets the active TSData by Name.
            </summary>
        </member>
        <member name="P:dss_sharp.TSData.Next">
            <summary>
            Sets the next TSData active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.TSData.idx">
            <summary>
            Get/set active TSData by index; index is 1-based: 1..count
            </summary>
        </member>
        <member name="P:dss_sharp.TSData.EmergAmps">
            <summary>
            Emergency ampere rating
            </summary>
        </member>
        <member name="P:dss_sharp.TSData.NormAmps">
            <summary>
            Normal Ampere rating
            </summary>
        </member>
        <member name="M:dss_sharp.Text.Commands(System.String[])">
             <summary>
             Runs a list of strings as commands directly in the DSS engine.
             Intermediate results are ignored.
            
             (API Extensions)
             </summary>
        </member>
        <member name="M:dss_sharp.Text.Commands(System.String)">
             <summary>
             Runs a large string as commands directly in the DSS engine.
             Intermediate results are ignored.
            
             (API Extensions)
             </summary>
        </member>
        <member name="P:dss_sharp.Text.Command">
            <summary>
            Input command string for the DSS.
            
            Original COM help: https://opendss.epri.com/Command1.html
            </summary>
        </member>
        <member name="P:dss_sharp.Text.Result">
            <summary>
            Result string for the last command.
            
            Original COM help: https://opendss.epri.com/Result.html
            </summary>
        </member>
        <member name="P:dss_sharp.Topology.ActiveBranch">
            <summary>
            Returns index of the active branch
            
            Original COM help: https://opendss.epri.com/ActiveBranch.html
            </summary>
        </member>
        <member name="P:dss_sharp.Topology.ActiveLevel">
            <summary>
            Topological depth of the active branch
            
            Original COM help: https://opendss.epri.com/ActiveLevel.html
            </summary>
        </member>
        <member name="P:dss_sharp.Topology.AllIsolatedBranches">
            <summary>
            Array of all isolated branch names.
            
            Original COM help: https://opendss.epri.com/AllIsolatedBranches.html
            </summary>
        </member>
        <member name="P:dss_sharp.Topology.AllIsolatedLoads">
            <summary>
            Array of all isolated load names.
            
            Original COM help: https://opendss.epri.com/AllIsolatedLoads.html
            </summary>
        </member>
        <member name="P:dss_sharp.Topology.AllLoopedPairs">
            <summary>
            Array of all looped element names, by pairs.
            
            Original COM help: https://opendss.epri.com/AllLoopedPairs.html
            </summary>
        </member>
        <member name="P:dss_sharp.Topology.BackwardBranch">
            <summary>
            Move back toward the source, return index of new active branch, or 0 if no more.
            
            Original COM help: https://opendss.epri.com/BackwardBranch.html
            </summary>
        </member>
        <member name="P:dss_sharp.Topology.BranchName">
            <summary>
            Name of the active branch.
            
            Original COM help: https://opendss.epri.com/BranchName.html
            </summary>
        </member>
        <member name="P:dss_sharp.Topology.BusName">
            <summary>
            Set the active branch to one containing this bus, return index or 0 if not found
            
            Original COM help: https://opendss.epri.com/BusName.html
            </summary>
        </member>
        <member name="P:dss_sharp.Topology.First">
            <summary>
            Sets the first branch active, returns 0 if none.
            
            Original COM help: https://opendss.epri.com/First19.html
            </summary>
        </member>
        <member name="P:dss_sharp.Topology.FirstLoad">
            <summary>
            First load at the active branch, return index or 0 if none.
            
            Original COM help: https://opendss.epri.com/FirstLoad.html
            </summary>
        </member>
        <member name="P:dss_sharp.Topology.ForwardBranch">
            <summary>
            Move forward in the tree, return index of new active branch or 0 if no more
            
            Original COM help: https://opendss.epri.com/ForwardBranch.html
            </summary>
        </member>
        <member name="P:dss_sharp.Topology.LoopedBranch">
            <summary>
            Move to looped branch, return index or 0 if none.
            
            Original COM help: https://opendss.epri.com/LoopedBranch.html
            </summary>
        </member>
        <member name="P:dss_sharp.Topology.Next">
            <summary>
            Sets the next branch active, returns 0 if no more.
            
            Original COM help: https://opendss.epri.com/Next18.html
            </summary>
        </member>
        <member name="P:dss_sharp.Topology.NextLoad">
            <summary>
            Next load at the active branch, return index or 0 if no more.
            
            Original COM help: https://opendss.epri.com/NextLoad.html
            </summary>
        </member>
        <member name="P:dss_sharp.Topology.NumIsolatedBranches">
            <summary>
            Number of isolated branches (PD elements and capacitors).
            
            Original COM help: https://opendss.epri.com/NumIsolatedBranches.html
            </summary>
        </member>
        <member name="P:dss_sharp.Topology.NumIsolatedLoads">
            <summary>
            Number of isolated loads
            
            Original COM help: https://opendss.epri.com/NumIsolatedLoads.html
            </summary>
        </member>
        <member name="P:dss_sharp.Topology.NumLoops">
            <summary>
            Number of loops
            
            Original COM help: https://opendss.epri.com/NumLoops.html
            </summary>
        </member>
        <member name="P:dss_sharp.Topology.ParallelBranch">
            <summary>
            Move to directly parallel branch, return index or 0 if none.
            
            Original COM help: https://opendss.epri.com/ParallelBranch.html
            </summary>
        </member>
        <member name="P:dss_sharp.Transformers.AllNames">
            <summary>
            Array of strings with all Transformer names in the circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.Transformers.Count">
            <summary>
            Number of Transformer objects in active circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.Transformers.First">
            <summary>
            Sets the first Transformer active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.Transformers.Name">
            <summary>
            Sets the active Transformer by Name.
            </summary>
        </member>
        <member name="P:dss_sharp.Transformers.Next">
            <summary>
            Sets the next Transformer active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.Transformers.idx">
            <summary>
            Get/set active Transformer by index; index is 1-based: 1..count
            </summary>
        </member>
        <member name="P:dss_sharp.Transformers.IsDelta">
            <summary>
            Active Winding delta or wye connection?
            
            Original COM help: https://opendss.epri.com/IsDelta3.html
            </summary>
        </member>
        <member name="P:dss_sharp.Transformers.MaxTap">
            <summary>
            Active Winding maximum tap in per-unit.
            
            Original COM help: https://opendss.epri.com/MaxTap.html
            </summary>
        </member>
        <member name="P:dss_sharp.Transformers.MinTap">
            <summary>
            Active Winding minimum tap in per-unit.
            
            Original COM help: https://opendss.epri.com/MinTap.html
            </summary>
        </member>
        <member name="P:dss_sharp.Transformers.NumTaps">
            <summary>
            Active Winding number of tap steps between MinTap and MaxTap.
            
            Original COM help: https://opendss.epri.com/NumTaps.html
            </summary>
        </member>
        <member name="P:dss_sharp.Transformers.NumWindings">
            <summary>
            Number of windings on this transformer. Allocates memory; set or change this property first.
            
            Original COM help: https://opendss.epri.com/NumWindings.html
            </summary>
        </member>
        <member name="P:dss_sharp.Transformers.R">
            <summary>
            Active Winding resistance in %
            
            Original COM help: https://opendss.epri.com/R.html
            </summary>
        </member>
        <member name="P:dss_sharp.Transformers.Rneut">
            <summary>
            Active Winding neutral resistance [ohms] for wye connections. Set less than zero for ungrounded wye.
            
            Original COM help: https://opendss.epri.com/Rneut1.html
            </summary>
        </member>
        <member name="P:dss_sharp.Transformers.Tap">
            <summary>
            Active Winding tap in per-unit.
            
            Original COM help: https://opendss.epri.com/Tap.html
            </summary>
        </member>
        <member name="P:dss_sharp.Transformers.Wdg">
            <summary>
            Active Winding Number from 1..NumWindings. Update this before reading or setting a sequence of winding properties (R, Tap, kV, kVA, etc.)
            
            Original COM help: https://opendss.epri.com/Wdg.html
            </summary>
        </member>
        <member name="P:dss_sharp.Transformers.XfmrCode">
            <summary>
            Name of an XfrmCode that supplies electrical parameters for this Transformer.
            
            Original COM help: https://opendss.epri.com/XfmrCode1.html
            </summary>
        </member>
        <member name="P:dss_sharp.Transformers.Xhl">
            <summary>
            Percent reactance between windings 1 and 2, on winding 1 kVA base. Use for 2-winding or 3-winding transformers.
            
            Original COM help: https://opendss.epri.com/Xhl.html
            </summary>
        </member>
        <member name="P:dss_sharp.Transformers.Xht">
            <summary>
            Percent reactance between windings 1 and 3, on winding 1 kVA base.  Use for 3-winding transformers only.
            
            Original COM help: https://opendss.epri.com/Xht.html
            </summary>
        </member>
        <member name="P:dss_sharp.Transformers.Xlt">
            <summary>
            Percent reactance between windings 2 and 3, on winding 1 kVA base. Use for 3-winding transformers only.
            
            Original COM help: https://opendss.epri.com/Xlt.html
            </summary>
        </member>
        <member name="P:dss_sharp.Transformers.Xneut">
            <summary>
            Active Winding neutral reactance [ohms] for wye connections.
            
            Original COM help: https://opendss.epri.com/Xneut1.html
            </summary>
        </member>
        <member name="P:dss_sharp.Transformers.kV">
            <summary>
            Active Winding kV rating.  Phase-phase for 2 or 3 phases, actual winding kV for 1 phase transformer.
            
            Original COM help: https://opendss.epri.com/kV3.html
            </summary>
        </member>
        <member name="P:dss_sharp.Transformers.kVA">
            <summary>
            Active Winding kVA rating. On winding 1, this also determines normal and emergency current ratings for all windings.
            
            Original COM help: https://opendss.epri.com/kva1.html
            </summary>
        </member>
        <member name="P:dss_sharp.Transformers.WdgVoltages">
            <summary>
            Complex array of voltages for active winding
            
            **WARNING:** If the transformer has open terminal(s), results may be wrong, i.e. avoid using this
            in those situations. For more information, see https://github.com/dss-extensions/dss-extensions/issues/24
            
            Original COM help: https://opendss.epri.com/WdgVoltages.html
            </summary>
        </member>
        <member name="P:dss_sharp.Transformers.WdgCurrents">
            <summary>
            All Winding currents (ph1, wdg1, wdg2,... ph2, wdg1, wdg2 ...)
            
            **WARNING:** If the transformer has open terminal(s), results may be wrong, i.e. avoid using this
            in those situations. For more information, see https://github.com/dss-extensions/dss-extensions/issues/24
            
            Original COM help: https://opendss.epri.com/WdgCurrents.html
            </summary>
        </member>
        <member name="P:dss_sharp.Transformers.strWdgCurrents">
            <summary>
            All winding currents in CSV string form like the WdgCurrents property
            
            **WARNING:** If the transformer has open terminal(s), results may be wrong, i.e. avoid using this
            in those situations. For more information, see https://github.com/dss-extensions/dss-extensions/issues/24
            </summary>
        </member>
        <member name="P:dss_sharp.Transformers.CoreType">
            <summary>
            Transformer Core Type: 0=Shell; 1=1ph; 3-3leg; 4=4-Leg; 5=5-leg; 9=Core-1-phase
            
            Original COM help: https://opendss.epri.com/CoreType.html
            </summary>
        </member>
        <member name="P:dss_sharp.Transformers.RdcOhms">
            <summary>
            dc Resistance of active winding in ohms for GIC analysis
            
            Original COM help: https://opendss.epri.com/RdcOhms.html
            </summary>
        </member>
        <member name="P:dss_sharp.Transformers.LossesByType">
            <summary>
            Complex array with the losses by type (total losses, load losses, no-load losses), in VA
            
            **(API Extension)**
            </summary>
        </member>
        <member name="P:dss_sharp.Transformers.AllLossesByType">
            <summary>
            Complex array with the losses by type (total losses, load losses, no-load losses), in VA, concatenated for ALL transformers
            
            **(API Extension)**
            </summary>
        </member>
        <member name="P:dss_sharp.Vsources.AllNames">
            <summary>
            Array of strings with all Vsource names in the circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.Vsources.Count">
            <summary>
            Number of Vsource objects in active circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.Vsources.First">
            <summary>
            Sets the first Vsource active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.Vsources.Name">
            <summary>
            Sets the active Vsource by Name.
            </summary>
        </member>
        <member name="P:dss_sharp.Vsources.Next">
            <summary>
            Sets the next Vsource active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.Vsources.idx">
            <summary>
            Get/set active Vsource by index; index is 1-based: 1..count
            </summary>
        </member>
        <member name="P:dss_sharp.Vsources.AngleDeg">
            <summary>
            Phase angle of first phase in degrees
            
            Original COM help: https://opendss.epri.com/AngleDeg1.html
            </summary>
        </member>
        <member name="P:dss_sharp.Vsources.BasekV">
            <summary>
            Source voltage in kV
            
            Original COM help: https://opendss.epri.com/BasekV.html
            </summary>
        </member>
        <member name="P:dss_sharp.Vsources.Frequency">
            <summary>
            Source frequency in Hz
            
            Original COM help: https://opendss.epri.com/Frequency2.html
            </summary>
        </member>
        <member name="P:dss_sharp.Vsources.Phases">
            <summary>
            Number of phases
            
            Original COM help: https://opendss.epri.com/Phases3.html
            </summary>
        </member>
        <member name="P:dss_sharp.Vsources.pu">
            <summary>
            Per-unit value of source voltage
            
            Original COM help: https://opendss.epri.com/pu.html
            </summary>
        </member>
        <member name="P:dss_sharp.WireData.AllNames">
            <summary>
            Array of strings with all WireData names in the circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.WireData.Count">
            <summary>
            Number of WireData objects in active circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.WireData.First">
            <summary>
            Sets the first WireData active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.WireData.Name">
            <summary>
            Sets the active WireData by Name.
            </summary>
        </member>
        <member name="P:dss_sharp.WireData.Next">
            <summary>
            Sets the next WireData active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.WireData.idx">
            <summary>
            Get/set active WireData by index; index is 1-based: 1..count
            </summary>
        </member>
        <member name="P:dss_sharp.WireData.EmergAmps">
            <summary>
            Emergency ampere rating
            </summary>
        </member>
        <member name="P:dss_sharp.WireData.NormAmps">
            <summary>
            Normal Ampere rating
            </summary>
        </member>
        <member name="P:dss_sharp.WireData.CapRadius">
            <summary>
            Equivalent conductor radius for capacitance calcs. Specify this for bundled conductors. Defaults to same value as radius.
            </summary>
        </member>
        <member name="P:dss_sharp.XYCurves.AllNames">
            <summary>
            Array of strings with all XYCurve names in the circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.XYCurves.Count">
            <summary>
            Number of XYCurve objects in active circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.XYCurves.First">
            <summary>
            Sets the first XYCurve active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.XYCurves.Name">
            <summary>
            Sets the active XYCurve by Name.
            </summary>
        </member>
        <member name="P:dss_sharp.XYCurves.Next">
            <summary>
            Sets the next XYCurve active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.XYCurves.idx">
            <summary>
            Get/set active XYCurve by index; index is 1-based: 1..count
            </summary>
        </member>
        <member name="P:dss_sharp.XYCurves.Npts">
            <summary>
            Get/Set Number of points in X-Y curve
            
            Original COM help: https://opendss.epri.com/Npts1.html
            </summary>
        </member>
        <member name="P:dss_sharp.XYCurves.Xarray">
            <summary>
            Get/set X values as a Array of doubles. Set Npts to max number expected if setting
            
            Original COM help: https://opendss.epri.com/Xarray.html
            </summary>
        </member>
        <member name="P:dss_sharp.XYCurves.Xscale">
            <summary>
            Factor to scale X values from original curve
            
            Original COM help: https://opendss.epri.com/Xscale.html
            </summary>
        </member>
        <member name="P:dss_sharp.XYCurves.Xshift">
            <summary>
            Amount to shift X value from original curve
            
            Original COM help: https://opendss.epri.com/Xshift.html
            </summary>
        </member>
        <member name="P:dss_sharp.XYCurves.Yarray">
            <summary>
            Get/Set Y values in curve; Set Npts to max number expected if setting
            
            Original COM help: https://opendss.epri.com/Yarray.html
            </summary>
        </member>
        <member name="P:dss_sharp.XYCurves.Yscale">
            <summary>
            Factor to scale Y values from original curve
            
            Original COM help: https://opendss.epri.com/Yscale.html
            </summary>
        </member>
        <member name="P:dss_sharp.XYCurves.Yshift">
            <summary>
            Amount to shift Y value from original curve
            
            Original COM help: https://opendss.epri.com/Yshift.html
            </summary>
        </member>
        <member name="P:dss_sharp.XYCurves.x">
            <summary>
            Set X value or get interpolated value after setting Y
            
            Original COM help: https://opendss.epri.com/x4.html
            </summary>
        </member>
        <member name="P:dss_sharp.XYCurves.y">
            <summary>
            Set Y value or get interpolated Y value after setting X
            
            Original COM help: https://opendss.epri.com/y1.html
            </summary>
        </member>
        <member name="P:dss_sharp.YMatrix.SolverOptions">
            <summary>
            Sparse solver options. See the enumeration SparseSolverOptions
            </summary>
        </member>
        <member name="M:dss_sharp.ZIP.Extract(System.String)">
             <summary>
             Extracts the contents of the file "FileName" from the current (open) ZIP file.
             Returns a byte-string.
            
             (API Extension)
             </summary>
        </member>
        <member name="M:dss_sharp.ZIP.List(System.String)">
             <summary>
             List of strings consisting of all names match the regular expression provided in regexp.
             If no expression is provided, all names in the current open ZIP are returned.
            
             See https://regex.sorokin.engineer/en/latest/regular_expressions.html for information on
             the expression syntax and options.
            
             (API Extension)
             </summary>
        </member>
        <member name="M:dss_sharp.ZIP.Open(System.String)">
            <summary>
            Opens and prepares a ZIP file to be used by the DSS text parser.
            Currently, the ZIP format support is limited by what is provided in the Free Pascal distribution.
            Besides that, the full filenames inside the ZIP must be shorter than 256 characters.
            The limitations should be removed in a future revision.
            
            **(API Extension)**
            </summary>
        </member>
        <member name="M:dss_sharp.ZIP.Close">
            <summary>
            Closes the current open ZIP file
            
            **(API Extension)**
            </summary>
        </member>
        <member name="M:dss_sharp.ZIP.Redirect(System.String)">
            <summary>
            Runs a "Redirect" command inside the current (open) ZIP file.
            In the current implementation, all files required by the script must
            be present inside the ZIP, using relative paths. The only exceptions are
            memory-mapped files.
            
            **(API Extension)**
            </summary>
        </member>
        <member name="M:dss_sharp.ZIP.Contains(System.String)">
            <summary>
            Check if the given path name is present in the current ZIP file.
            
            **(API Extension)**
            </summary>
        </member>
        <member name="P:dss_sharp.GICSources.AllNames">
            <summary>
            Array of strings with all GICSource names in the circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.GICSources.Count">
            <summary>
            Number of GICSource objects in active circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.GICSources.First">
            <summary>
            Sets the first GICSource active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.GICSources.Name">
            <summary>
            Sets the active GICSource by Name.
            </summary>
        </member>
        <member name="P:dss_sharp.GICSources.Next">
            <summary>
            Sets the next GICSource active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.GICSources.idx">
            <summary>
            Get/set active GICSource by index; index is 1-based: 1..count
            </summary>
        </member>
        <member name="P:dss_sharp.GICSources.Bus1">
            <summary>
            First bus name of GICSource (Created name)
            </summary>
        </member>
        <member name="P:dss_sharp.GICSources.Bus2">
            <summary>
            Second bus name
            </summary>
        </member>
        <member name="P:dss_sharp.GICSources.Phases">
            <summary>
            Number of Phases, this GICSource element.
            </summary>
        </member>
        <member name="P:dss_sharp.GICSources.EN">
            <summary>
            Northward E Field V/km
            </summary>
        </member>
        <member name="P:dss_sharp.GICSources.EE">
            <summary>
            Eastward E Field, V/km
            </summary>
        </member>
        <member name="P:dss_sharp.GICSources.Lat1">
            <summary>
            Latitude of Bus1 (degrees)
            </summary>
        </member>
        <member name="P:dss_sharp.GICSources.Lat2">
            <summary>
            Latitude of Bus2 (degrees)
            </summary>
        </member>
        <member name="P:dss_sharp.GICSources.Lon1">
            <summary>
            Longitude of Bus1 (Degrees)
            </summary>
        </member>
        <member name="P:dss_sharp.GICSources.Lon2">
            <summary>
            Longitude of Bus2 (Degrees)
            </summary>
        </member>
        <member name="P:dss_sharp.GICSources.Volts">
            <summary>
            Specify dc voltage directly
            </summary>
        </member>
        <member name="P:dss_sharp.Storages.AllNames">
            <summary>
            Array of strings with all Storage names in the circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.Storages.Count">
            <summary>
            Number of Storage objects in active circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.Storages.First">
            <summary>
            Sets the first Storage active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.Storages.Name">
            <summary>
            Sets the active Storage by Name.
            </summary>
        </member>
        <member name="P:dss_sharp.Storages.Next">
            <summary>
            Sets the next Storage active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.Storages.idx">
            <summary>
            Get/set active Storage by index; index is 1-based: 1..count
            </summary>
        </member>
        <member name="P:dss_sharp.Storages.puSOC">
            <summary>
            Per unit state of charge
            </summary>
        </member>
        <member name="P:dss_sharp.Storages.State">
            <summary>
            Get/set state: 0=Idling; 1=Discharging; -1=Charging;
            </summary>
        </member>
        <member name="P:dss_sharp.Storages.RegisterNames">
            <summary>
            Array of Storage energy meter register names
            
            See also the enum `GeneratorRegisters`.
            </summary>
        </member>
        <member name="P:dss_sharp.Storages.RegisterValues">
            <summary>
            Array of values in Storage registers.
            </summary>
        </member>
        <member name="M:dss_sharp.Parallel.CreateActor">
            <summary>
            Create a new actor, if there are still cores available.
            </summary>
        </member>
        <member name="M:dss_sharp.Parallel.Wait">
            <summary>
            Suspends the host's thread until all the OpenDSS running jobs finish.
            
            Original COM help: https://opendss.epri.com/Wait.html
            </summary>
        </member>
        <member name="P:dss_sharp.Parallel.ActiveActor">
            <summary>
            Gets/sets the ID of the Active Actor
            
            Original COM help: https://opendss.epri.com/ActiveActor.html
            </summary>
        </member>
        <member name="P:dss_sharp.Parallel.ActiveParallel">
            <summary>
            (read) Sets ON/OFF (1/0) Parallel features of the Engine
            (write) Delivers if the Parallel features of the Engine are Active
            
            Original COM help: https://opendss.epri.com/ActiveParallel.html
            </summary>
        </member>
        <member name="P:dss_sharp.Parallel.ActorCPU">
            <summary>
            Gets/sets the CPU of the Active Actor
            
            Original COM help: https://opendss.epri.com/ActorCPU.html
            </summary>
        </member>
        <member name="P:dss_sharp.Parallel.ActorProgress">
            <summary>
            Gets the progress of all existing actors in pct
            
            Original COM help: https://opendss.epri.com/ActorProgress.html
            </summary>
        </member>
        <member name="P:dss_sharp.Parallel.ActorStatus">
            <summary>
            Gets the status of each actor
            
            Original COM help: https://opendss.epri.com/ActorStatus.html
            </summary>
        </member>
        <member name="P:dss_sharp.Parallel.ConcatenateReports">
            <summary>
            (read) Reads the values of the ConcatenateReports option (1=enabled, 0=disabled)
            (write) Enable/Disable (1/0) the ConcatenateReports option for extracting monitors data
            
            Original COM help: https://opendss.epri.com/ConcatenateReports.html
            </summary>
        </member>
        <member name="P:dss_sharp.Parallel.NumCPUs">
            <summary>
            Delivers the number of CPUs on the current PC
            
            Original COM help: https://opendss.epri.com/NumCPUs.html
            </summary>
        </member>
        <member name="P:dss_sharp.Parallel.NumCores">
            <summary>
            Delivers the number of Cores of the local PC
            
            Original COM help: https://opendss.epri.com/NumCores.html
            </summary>
        </member>
        <member name="P:dss_sharp.Parallel.NumOfActors">
            <summary>
            Gets the number of Actors created
            
            Original COM help: https://opendss.epri.com/NumOfActors.html
            </summary>
        </member>
        <member name="M:dss_sharp.DSS.#ctor">
             <summary>
             Expose DSS without a constructor parameters for backwards compatibility.
             This contructors always exposes the prime/default instance of OpenDSS.
            
             For creating new independent instances, use the static helper function
             <cref>NewContext</cref>.
             </summary>
        </member>
        <member name="M:dss_sharp.DSS.NewContext">
             <summary>
             Creates a new DSS engine context.
             A DSS Context encapsulates most of the global state of the original OpenDSS engine,
             allowing the user to create multiple instances in the same process. By creating contexts
             manually, the management of threads and potential issues should be handled by the user.
            
             (API Extension)
             </summary>
        </member>
        <member name="M:dss_sharp.DSS.Reset">
            <summary>
            This is a no-op function, does nothing. Left for compatibility.
            
            Original COM help: https://opendss.epri.com/Reset1.html
            </summary>
        </member>
        <member name="M:dss_sharp.DSS.Start(System.Int32)">
            <summary>
            This is a no-op function, does nothing. Left for compatibility.
            
            Calling `Start` in AltDSS/DSS-Extensions is required but that is already
            handled automatically, so the users do not need to call it manually,
            unless using AltDSS/DSS C-API directly without further tools.
            
            On the official OpenDSS, `Start` also does nothing at all in the current 
            versions.
            
            Original COM help: https://opendss.epri.com/Start.html
            </summary>
        </member>
        <member name="P:dss_sharp.DSS.Classes">
            <summary>
            List of DSS intrinsic classes (names of the classes)
            
            Original COM help: https://opendss.epri.com/Classes1.html
            </summary>
        </member>
        <member name="P:dss_sharp.DSS.DataPath">
            <summary>
            DSS Data File Path.  Default path for reports, etc. from DSS
            
            Original COM help: https://opendss.epri.com/DataPath.html
            </summary>
        </member>
        <member name="P:dss_sharp.DSS.DefaultEditor">
            <summary>
            Returns the path name for the default text editor.
            
            Original COM help: https://opendss.epri.com/DefaultEditor.html
            </summary>
        </member>
        <member name="P:dss_sharp.DSS.NumCircuits">
            <summary>
            Number of Circuits currently defined
            
            Original COM help: https://opendss.epri.com/NumCircuits.html
            </summary>
        </member>
        <member name="P:dss_sharp.DSS.NumClasses">
            <summary>
            Number of DSS intrinsic classes
            
            Original COM help: https://opendss.epri.com/NumClasses.html
            </summary>
        </member>
        <member name="P:dss_sharp.DSS.NumUserClasses">
            <summary>
            Number of user-defined classes
            
            Original COM help: https://opendss.epri.com/NumUserClasses.html
            </summary>
        </member>
        <member name="P:dss_sharp.DSS.UserClasses">
            <summary>
            List of user-defined classes
            
            Original COM help: https://opendss.epri.com/UserClasses.html
            </summary>
        </member>
        <member name="P:dss_sharp.DSS.Version">
            <summary>
            Get version string for the DSS.
            
            Original COM help: https://opendss.epri.com/Version.html
            </summary>
        </member>
        <member name="P:dss_sharp.DSS.AllowForms">
            <summary>
            Gets/sets whether text output is allowed (DSS-Extensions) or general forms/windows are shown (official OpenDSS).
            
            Original COM help: https://opendss.epri.com/AllowForms.html
            </summary>
        </member>
        <member name="P:dss_sharp.DSS.AllowEditor">
            <summary>
            Gets/sets whether running the external editor for "Show" is allowed
            
            AllowEditor controls whether the external editor is used in commands like "Show".
            If you set to 0 (false), the editor is not executed. Note that other side effects,
            such as the creation of files, are not affected.
            
            **(API Extension)**
            </summary>
        </member>
        <member name="M:dss_sharp.DSS.NewCircuit(System.String)">
            <summary>
            Make a new circuit and returns the interface to the active circuit.
            
            Original COM help: https://opendss.epri.com/NewCircuit.html
            </summary>
        </member>
        <member name="P:dss_sharp.DSS.LegacyModels">
            <summary>
            LegacyModels was a flag used to toggle legacy (pre-2019) models for PVSystem, InvControl, Storage and
            StorageControl.
            In the official OpenDSS version 9.0, the old models were removed. They were temporarily present here
            but were also removed in DSS C-API v0.13.0.
            
            **NOTE**: this property will be removed for v1.0. It is left to avoid breaking the current API too soon.
            
            **(API Extension)**
            </summary>
        </member>
        <member name="P:dss_sharp.DSS.AllowChangeDir">
            <summary>
            If disabled, the engine will not change the active working directory during execution. E.g. a "compile"
            command will not "chdir" to the file path.
            
            If you have issues with long paths, enabling this might help in some scenarios.
            
            Defaults to true (allow changes, backwards compatible) in the 0.10.x versions of DSS C-API. 
            This might change to false in future versions.
            
            This can also be set through the environment variable DSS_CAPI_ALLOW_CHANGE_DIR. Set it to 0 to
            disallow changing the active working directory.
            
            **(API Extension)**
            </summary>
        </member>
        <member name="P:dss_sharp.DSS.AllowDOScmd">
            <summary>
            If enabled, the `DOScmd` command is allowed. Otherwise, an error is reported if the user tries to use it.
            
            Defaults to false (disabled state). Users should consider DOScmd deprecated on DSS-Extensions.
            
            This can also be set through the environment variable DSS_CAPI_ALLOW_DOSCMD. Setting it to 1 enables
            the command.
            
            **(API Extension)**
            </summary>
        </member>
        <member name="P:dss_sharp.DSS.COMErrorResults">
            <summary>
            If enabled, in case of errors or empty arrays, the API returns arrays with values compatible with the 
            official OpenDSS COM interface. 
            
            For example, consider the function `Loads_Get_ZIPV`. If there is no active circuit or active load element:
            
            - In the disabled state (COMErrorResults==false), the function will return "[]", an array with 0 elements.
            - In the enabled state (COMErrorResults==true), the function will return "[0.0]" instead. This should
            be compatible with the return value of the official COM interface.
            
            Defaults to true (enabled state) in the v0.12.x series. This will change to false in future series.
            
            This can also be set through the environment variable `DSS_CAPI_COM_DEFAULTS`. Setting it to 0 disables
            the legacy/COM behavior. The value can be toggled through the API at any time.
            
            **(API Extension)**
            </summary>
        </member>
        <member name="P:dss_sharp.DSS.CompatFlags">
            <summary>
            Controls some compatibility flags introduced to toggle some behavior from the official OpenDSS.
            
            **THE FLAGS ARE GLOBAL, affecting all DSS engines in the process.**
            
            These flags may change for each version of DSS C-API, but the same value will not be reused. That is,
            when we remove a compatibility flag, it will have no effect but will also not affect anything else
            besides raising an error if the user tries to toggle a flag that was available in a previous version.
            
            We expect to keep a very limited number of flags. Since the flags are more transient than the other
            options/flags, it was preferred to add this generic function instead of a separate function per
            flag.
            
            See the enumeration `DSSCompatFlags` for available flags, including description.
            
            **(API Extension)**
            </summary>
        </member>
        <member name="T:dss_sharp.DSSException">
            <summary>
            DSSException encapsulates the error information from the
            "DSS.Error" interface.
            </summary>
        </member>
        <member name="T:dss_sharp.detail.ContextState">
            <summary>
            ContextState keeps a copy of the DSS engine instance and
            the utility class (APIUtil).
            </summary>
        </member>
        <member name="M:dss_sharp.detail.ContextState.GetContextHandle">
            <summary>
            Returns the low-level handle of the current OpenDSS/DSS-CAPI instance.
            </summary>
        </member>
        <member name="T:dss_sharp.detail.APIUtil">
            <summary>
            APIUtil provides some common functions to read data and map errors.
            Member names are kept to mirror DSS-Python and other projects.
            </summary>
        </member>
        <member name="M:dss_sharp.detail.APIUtil.CheckForError">
             <summary>
             If the exception mapping mechanism is enabled, the DSS.Error.Number code is inspected.
             If non-zero, the matching DSS.Error.Description message is read and a DSSException is
             thrown. This is called internally after most of the dss_sharp DSS C-API calls to ensure
             most engine errors are being handled as early as possible.
            
             If exceptions cannot be used, check `DSS.Error.Number` directly.
             </summary>
        </member>
    </members>
</doc>
